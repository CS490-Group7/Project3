{"ast":null,"code":"export const refreshTokenSetup = res => {\n  // Timing to renew access token\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponse();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    console.log('newAuthRes:', newAuthRes); // saveUserToken(newAuthRes.access_token);  <-- save new token\n\n    console.log('new auth token', newAuthRes.id_token); //localStorage.setItem('authToken', newAuthRes.id_token);\n    // Setup the other timer after the first one\n\n    setTimeout(refreshToken, refreshTiming);\n  }; // Setup first refresh timer\n\n\n  setTimeout(refreshToken, refreshTiming);\n};","map":{"version":3,"sources":["/home/ec2-user/environment/Project3/src/refreshToken.js"],"names":["refreshTokenSetup","res","refreshTiming","tokenObj","expires_in","refreshToken","newAuthRes","reloadAuthResponse","console","log","id_token","setTimeout"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,GAAD,IAAS;AACxC;AACA,MAAIC,aAAa,GAAG,CAACD,GAAG,CAACE,QAAJ,CAAaC,UAAb,IAA2B,OAAO,IAAI,EAAvC,IAA6C,IAAjE;;AAEA,QAAMC,YAAY,GAAG,YAAY;AAC/B,UAAMC,UAAU,GAAG,MAAML,GAAG,CAACM,kBAAJ,EAAzB;AACAL,IAAAA,aAAa,GAAG,CAACI,UAAU,CAACF,UAAX,IAAyB,OAAO,IAAI,EAArC,IAA2C,IAA3D;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BH,UAA3B,EAH+B,CAI/B;;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,UAAU,CAACI,QAAzC,EAL+B,CAM/B;AAEA;;AACAC,IAAAA,UAAU,CAACN,YAAD,EAAeH,aAAf,CAAV;AACD,GAVD,CAJwC,CAgBxC;;;AACAS,EAAAA,UAAU,CAACN,YAAD,EAAeH,aAAf,CAAV;AACD,CAlBM","sourcesContent":["export const refreshTokenSetup = (res) => {\n  // Timing to renew access token\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\n\n  const refreshToken = async () => {\n    const newAuthRes = await res.reloadAuthResponse();\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\n    console.log('newAuthRes:', newAuthRes);\n    // saveUserToken(newAuthRes.access_token);  <-- save new token\n    console.log('new auth token', newAuthRes.id_token);\n    //localStorage.setItem('authToken', newAuthRes.id_token);\n\n    // Setup the other timer after the first one\n    setTimeout(refreshToken, refreshTiming);\n  };\n\n  // Setup first refresh timer\n  setTimeout(refreshToken, refreshTiming);\n};\n"]},"metadata":{},"sourceType":"module"}