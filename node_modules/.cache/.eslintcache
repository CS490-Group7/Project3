[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/Nav.js":"4","/home/ec2-user/environment/Project3/src/Activity.js":"5","/home/ec2-user/environment/Project3/src/CreateTrip.js":"6","/home/ec2-user/environment/Project3/src/Trip.js":"7","/home/ec2-user/environment/Project3/src/LandingPage.js":"8","/home/ec2-user/environment/Project3/src/JoinTrip.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/Login.js":"12","/home/ec2-user/environment/Project3/src/CreateActivity.js":"13","/home/ec2-user/environment/Project3/src/api/api.js":"14","/home/ec2-user/environment/Project3/src/InputEmails.js":"15","/home/ec2-user/environment/Project3/src/refreshToken.js":"16"},{"size":500,"mtime":1617893326172,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"18"},{"size":3507,"mtime":1619989647756,"results":"20","hashOfConfig":"18"},{"size":2021,"mtime":1620072342912,"results":"21","hashOfConfig":"18"},{"size":2745,"mtime":1619990715034,"results":"22","hashOfConfig":"18"},{"size":3261,"mtime":1619990669384,"results":"23","hashOfConfig":"18"},{"size":3161,"mtime":1620073302116,"results":"24","hashOfConfig":"18"},{"size":3369,"mtime":1619990669376,"results":"25","hashOfConfig":"18"},{"size":1363,"mtime":1619990669376,"results":"26","hashOfConfig":"18"},{"size":4036,"mtime":1620072171468,"results":"27","hashOfConfig":"18"},{"size":696,"mtime":1619613394877,"results":"28","hashOfConfig":"18"},{"size":1418,"mtime":1619613394877,"results":"29","hashOfConfig":"18"},{"size":3137,"mtime":1619990777836,"results":"30","hashOfConfig":"18"},{"size":4884,"mtime":1619990849347,"results":"31","hashOfConfig":"18"},{"size":1458,"mtime":1619990669376,"results":"32","hashOfConfig":"18"},{"size":720,"mtime":1619613394881,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"168wlww",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/ec2-user/environment/Project3/src/index.js",[],["70","71"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["72","73"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\nimport 'react-notifications/lib/notifications.css';\nimport LandingPage from './LandingPage';\nimport { NotificationManager} from 'react-notifications';\n\n\nimport { HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    function createNotification(type, title, message) {\n      switch (type) {\n        case 'info':\n          console.log(type);\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success(message, title, 3000);\n          break;\n        case 'warning':\n          NotificationManager.warning(message, title, 5000);\n          break;\n        case 'error':\n          NotificationManager.error(message, title, 5000);\n          break;\n      }\n    };\n  \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/\" render={() => ( <LandingPage/>)}/>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",["74","75","76","77","78"],"import {useState, useEffect} from 'react';\nimport './App.css';\nimport { getActivityApi, setUserPaidApi, removeFromActivityApi } from './api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport PropTypes from 'prop-types';\n\n\n//import { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\nfunction Activity(props){\n    \n    const [name, setName] = useState(\"\");\n    const [cost, setCost] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [time, setTime] = useState(\"\");\n    const [owner, setOwner] = useState(false);\n    const [costPerPerson, setCostPerPerson] = useState(\"\");\n    const [participants, setParticipants] = useState([]);\n    \n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n    }\n    \n    function markUserPaid(email){\n      setUserPaidApi(props.token, props.id, email).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n    \n    function removeUserFromActivity(email){\n      removeFromActivityApi(props.token, props.id, email).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n    \n    function configureState(data){\n      console.log(data);\n      setName(data.name);\n      setCost(data.totalCost);\n      setCostPerPerson(data.costPerPerson);\n      setDate(data.date);\n      setTime(data.time);\n      setParticipants(data.participants);\n      setOwner(data.owner);\n    }\n    \n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        getActivityApi(props.token, props.id).then(data => configureState(data));\n    },[props.token, props.refreshState]);\n\n    return (\n\n      <div className=\"Activity\">\n        <NotificationContainer/>\n            <div className=\"box\">\n              <h3>{name}.. </h3><h4>({date} at {time})</h4><h5> Total cost ${cost} - Cost per person ${costPerPerson}</h5>\n              <p>Participants {participants.map( user => ( \n                <p>\n                  {user.firstName} - {user.email} - Paid? {user.paid == 1 ? <b>Yes</b> : <b>No</b>} {owner && user.paid == 0? <div><button onClick={ () => markUserPaid(user.email)}>'Mark as Paid'</button></div> : '' }\n                                                                                                    {owner && user.email != owner.email? <div><button onClick={ () => removeUserFromActivity(user.email)}>'Remove User'</button></div> : '' }\n                </p> \n              ) )}</p>\n            </div>\n\n      </div>\n    );\n}\n\nexport default Activity;","/home/ec2-user/environment/Project3/src/CreateTrip.js",[],"/home/ec2-user/environment/Project3/src/Trip.js",["79","80","81","82","83"],"/home/ec2-user/environment/Project3/src/LandingPage.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["84"],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/CreateActivity.js",["85"],"import {useState } from 'react';\nimport './App.css';\nimport { createActivityApi } from './api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n//import Popup from 'reactjs-popup';\nimport 'reactjs-popup/dist/index.css';\n//import {InputEmails , getInvitedEmails} from './InputEmails';\n\n\nfunction CreateActivity(props){\n  \n    const [cost, setCost] = useState('');\n    const [name, setName] = useState('');\n    const [date, setDate] = useState('');\n    const [time, setTime] = useState('');\n    const [emails, setEmails] = useState('');\n\n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n    }\n    \n\n    function onSubmit(){\n      let arrayOfEmails = emails.split(',');\n      if(arrayOfEmails[0] == \"\")\n        arrayOfEmails = [];\n      var finalList = [];\n      \n      for(var i = 0; i<arrayOfEmails.length; i++){\n        if (!finalList.includes(arrayOfEmails[i])){\n          finalList.push(arrayOfEmails[i]);\n        }\n      }\n\n      createActivityApi(props.token, props.trip, name, date, time, cost, finalList).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n\n    return (\n      <div className=\"Activity\">\n\n        <NotificationContainer/>\n            <div className=\"box1\">\n              <h5> Create an activity </h5>\n              <input\n                required\n                type=\"text\"\n                \n                name=\"activityName\"\n                className=\"ml10\"\n                placeholder=\"Enter Activity Name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n              <input\n                required\n                type=\"text\"\n                name=\"amount\"\n                className=\"ml10\"\n                placeholder=\"Enter Cost\"\n                value={cost}\n                onChange={e => setCost(e.target.value)}\n              />\n              <input\n                required\n                type=\"date\"\n                name=\"date\"\n                className=\"ml10\"\n                placeholder=\"Enter Date\"\n                value={date}\n                onChange={e => setDate(e.target.value)}\n              />\n              <input\n                required\n                type=\"time\"\n                name=\"time\"\n                className=\"ml10\"\n                placeholder=\"Enter Time\"\n                value={time}\n                onChange={e => setTime(e.target.value)}\n              />\n              \n              <input\n                required\n                type=\"emails\"\n                name=\"emails\"\n                className=\"ml101\"\n                placeholder=\"Participant Email1, Email2\"\n                value={emails}\n                onChange={e => setEmails(e.target.value)}\n              />\n              \n              <div className=\"btn-box\">\n                <button onClick={onSubmit}>Add</button>\n              </div>\n            </div>\n      </div>\n    );\n}\n\nexport default CreateActivity;","/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":23,"column":7,"nodeType":"92","messageId":"93","endLine":37,"endColumn":8},{"ruleId":"94","severity":1,"message":"95","line":52,"column":8,"nodeType":"96","endLine":52,"endColumn":10,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":6,"column":8,"nodeType":"100","messageId":"101","endLine":6,"endColumn":17},{"ruleId":"94","severity":1,"message":"102","line":51,"column":7,"nodeType":"96","endLine":51,"endColumn":40,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":61,"column":70,"nodeType":"106","messageId":"107","endLine":61,"endColumn":72},{"ruleId":"104","severity":1,"message":"105","line":61,"column":121,"nodeType":"106","messageId":"107","endLine":61,"endColumn":123},{"ruleId":"104","severity":1,"message":"108","line":62,"column":122,"nodeType":"106","messageId":"107","endLine":62,"endColumn":124},{"ruleId":"98","severity":1,"message":"109","line":19,"column":12,"nodeType":"100","messageId":"101","endLine":19,"endColumn":21},{"ruleId":"98","severity":1,"message":"110","line":21,"column":12,"nodeType":"100","messageId":"101","endLine":21,"endColumn":20},{"ruleId":"98","severity":1,"message":"111","line":21,"column":22,"nodeType":"100","messageId":"101","endLine":21,"endColumn":33},{"ruleId":"98","severity":1,"message":"112","line":42,"column":13,"nodeType":"100","messageId":"101","endLine":42,"endColumn":28},{"ruleId":"94","severity":1,"message":"113","line":61,"column":7,"nodeType":"96","endLine":61,"endColumn":45,"suggestions":"114"},{"ruleId":"94","severity":1,"message":"115","line":79,"column":8,"nodeType":"96","endLine":79,"endColumn":46,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"105","line":29,"column":27,"nodeType":"106","messageId":"107","endLine":29,"endColumn":29},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["119"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'props.id' and 'props.isAuth'. Either include them or remove the dependency array.",["120"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'tripUsers' is assigned a value but never used.","'fullname' is assigned a value but never used.","'setFullname' is assigned a value but never used.","'newParticipants' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleErrors' and 'tripId'. Either include them or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"131","text":"132"},"Update the dependencies array to be: [props.token, props.refreshState, props.isAuth, props.id]",{"range":"133","text":"134"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, tripId, handleErrors]",{"range":"135","text":"136"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, updateData]",{"range":"137","text":"138"},[1728,1730],"[isAuthenticated, tokenId]",[1823,1856],"[props.token, props.refreshState, props.isAuth, props.id]",[1984,2022],"[isLoading, props.token, props.isAuth, tripId, handleErrors]",[2812,2850],"[isLoading, props.token, props.isAuth, updateData]"]