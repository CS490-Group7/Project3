[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/JoinTrip.js":"4","/home/ec2-user/environment/Project3/src/Nav.js":"5","/home/ec2-user/environment/Project3/src/CreateTrip.js":"6","/home/ec2-user/environment/Project3/src/Trip.js":"7","/home/ec2-user/environment/Project3/src/Activity.js":"8","/home/ec2-user/environment/Project3/src/components/HomePage.js":"9","/home/ec2-user/environment/Project3/src/Logout.js":"10","/home/ec2-user/environment/Project3/src/Login.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/InputEmails.js":"13","/home/ec2-user/environment/Project3/src/refreshToken.js":"14","/home/ec2-user/environment/Project3/src/CreateActivity.js":"15"},{"size":500,"mtime":1617817252815,"results":"16","hashOfConfig":"17"},{"size":2631,"mtime":1619574569188,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1617817252815,"results":"19","hashOfConfig":"17"},{"size":968,"mtime":1619577459259,"results":"20","hashOfConfig":"17"},{"size":1955,"mtime":1619574569188,"results":"21","hashOfConfig":"17"},{"size":3049,"mtime":1619577409290,"results":"22","hashOfConfig":"17"},{"size":3418,"mtime":1619744959530,"results":"23","hashOfConfig":"17"},{"size":1714,"mtime":1619745657289,"results":"24","hashOfConfig":"17"},{"size":3484,"mtime":1619576940102,"results":"25","hashOfConfig":"17"},{"size":696,"mtime":1619574569188,"results":"26","hashOfConfig":"17"},{"size":1418,"mtime":1619574569188,"results":"27","hashOfConfig":"17"},{"size":4391,"mtime":1619743095163,"results":"28","hashOfConfig":"17"},{"size":1561,"mtime":1619577422934,"results":"29","hashOfConfig":"17"},{"size":720,"mtime":1618001703487,"results":"30","hashOfConfig":"17"},{"size":2055,"mtime":1619742889171,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1oo5ec8",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"/home/ec2-user/environment/Project3/src/index.js",[],["68","69"],"/home/ec2-user/environment/Project3/src/App.js",["70","71"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/CreateTrip.js",["72","73"],"import Trip from './Trip';\nimport React, { useState } from 'react';\n\n\nimport { createTripApi, inviteToTripApi } from './api/api.js';\n\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport { getInvitedEmails, InputEmails } from './InputEmails';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n    const history = useHistory();\n    //const user = useState('');\n    const { register, handleSubmit } = useForm();\n    \n    var code = \"\";\n    function joinCode() {\n      \n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    \n      for (var i = 0; i < 7; i++)\n        code += possible.charAt(Math.floor(Math.random() * possible.length));\n      return code;\n    }\n    \n\n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      console.log(data);\n      data.join_code=joinCode();\n      // doesnt redirect till all fields are filled up\n      if(props.token !== \"\"){\n            createTripApi(props.token, data).then(data => history.push('/trip/' + data.tripId));\n      }\n      const emails = getInvitedEmails().map(email => email['value'])\n      console.log(emails);\n      \n      if(emails !== []){\n          inviteToTripApi(props.token, emails, data['join_code'])\n      }\n    }\n// sample Trip1- code: uw1YGGD\n\n    return(\n        <div className=\"activity\">\n            {props.isAuth?(\n            <div>\n                <h3 className=\"headingClass\">Create a new trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                        <div><label for=\"Name\" className=\"labels\"> Enter Trip name :</label>\n                        <input required type=\"text\" id=\"Name\" className=\"createTripInputs1\" placeholder=\"eg., Vegas\" {...register(\"trip_name\", {required: true, maxLength: 17})} /></div>\n                        \n                        <div><label for=\"tripStart\" className=\"labels\">Trip's Start Date:</label>\n                        <input required type=\"date\" id=\"tripStart\" className=\"createTripInputs\" placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                      \n                        <div><label for=\"tripEnd\" className=\"labels\"> Trip's End Date :</label>\n                        <input required type=\"date\" id=\"tripEnd\" className=\"createTripInputs\" placeholder=\"End Date\" {...register(\"End Date\", {required: true})}/></div>\n                       \n                        <div><label className=\"labels\">Invite Participants: </label>\n                        <InputEmails/></div>\n                        <hr/>\n                        <div><button type=\"submit\" className=\"tripSubmit\">Create Trip</button></div>\n                </form>\n            </div>)\n            :null}\n\n            <Router>\n                <div>\n                    <Route path=\"/trip\" component={Trip}/>\n                </div>\n            </Router>\n\n                \n        </div>\n        );\n}\n\nexport default CreateTrip;\n","/home/ec2-user/environment/Project3/src/Trip.js",["74","75","76","77","78","79","80"],"import React, {useState, useEffect} from 'react';\nimport Activity from './Activity.js'\nimport CreateActivity from './CreateActivity.js'\nimport {useParams} from \"react-router-dom\";\nimport { tripIdApi,userApi,userBalanceApi, setUserPaidApi } from './api/api.js';\n\nfunction Trip(props)\n{\n     let { tripId } = useParams();\n    const [tripName, setTripName] = useState(\"\");\n    const [tripOwner, setTripOwner] = useState(\"\");\n    const [tripUsers, setTripUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [fullname, setFullname] = useState([]);\n    const [participants,setParticipants] = useState([]);\n    const [activityIds, setActivityIds] = useState([]);\n    const [balance, setBalance] = useState(0);\n\n    //useState with activity id []\n    function configureState(data)\n    {\n        console.log(data);\n        setTripName(data.tripName);\n        setTripOwner(data.tripOwner);\n        setTripUsers(data.participants[0].firstName);\n        let newParticipants = participants;\n        setParticipants(data.participants);\n        setActivityIds(data.activities);\n    }\n    \n    function refresh(){\n        setIsLoading(!isLoading);\n    }\n    \n\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth){\n        tripIdApi(props.token, tripId).then(data => configureState(data));\n        userBalanceApi(props.token, tripId).then(data => setBalance(data.balance));\n      }\n    },[isLoading, props.token, props.isAuth]);\n\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h1>{tripName}!</h1></div>\n             <div><h4>Trip creator: {tripOwner}</h4></div>\n             \n             <div><h6><table><th>Participants on this trip: </th>{participants.map(user => (<tr><td><h6>{user.firstName} - {user.email}</h6></td></tr>))}</table></h6></div>\n             <div class=\"triptext\">\n                <div className=\"smallBox\">Outstanding balance: <b>${balance}</b></div>\n                <CreateActivity token={props.token} trip={tripId} refresh={refresh} />\n                {activityIds.map(activityId => <Activity token={props.token} isAuth={props.isAuth} refresh={refresh} refreshState={isLoading} id={activityId} />)}\n             </div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default Trip;\n\n\n// useEffect is running infinitely\n    // useEffect(() => {\n    //     async function fetchData() {\n    //         console.log('look')\n    //         setIsLoading(true);\n    //         const fetcher = await tripIdApi(props.token, tripId);\n    //         console.log(\"showing fetcher\",fetcher)\n    //         setTripName(fetcher.tripName)\n    //         setTripOwner(fetcher.tripOwner)\n    //         setFullname([]);\n    //         //setEmails([]);\n    //         fetcher.participants.map((index)=>setEmails(prev=>[...prev,index.email]));\n    //         //fetcher.participants.map((index)=>setFullname(prev=>[...prev,index.firstName+\" \"+index.lastName]));\n    //         setIsLoading(false);\n    //     }\n    //     fetchData();\n    //     //   //If user is logged in and the token ID is valid, update home page\n    //     //   if(props.token !== \"\" && props.isAuth)\n    //     //     tripIdApi(props.token, tripId).then(data => printData(data));\n    // },[props.token]);\n    ","/home/ec2-user/environment/Project3/src/Activity.js",["81","82","83","84"],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["85","86"],"import { useState, useEffect } from 'react';\n// import Login from'../Login.js';\n// import Logout from'../Logout.js';\n//import {loginApi, userApi} from '../api/api.js';\nimport { userApi,deleteTripIdApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    const [hide, setHide]=useState(false);\n    \n    function randomImages(){\n      var images = [\"https://i.stack.imgur.com/CJT47.jpg\",\"https://www.freegreatpicture.com/files/85/2994-man-and-nature.jpg\"\n                    ,\"https://www.freegreatpicture.com/files/31/10971-world-scenery.jpg\"\n                    ,\"https://media.cntraveler.com/photos/5949abf42bd0d42819c6065e/master/pass/Big-Bend-GettyImages-516259396.jpg\"\n                    ,\"https://media.timeout.com/images/105685502/image.jpg\"];\n     var randomImage = images[Math.floor(Math.random()*images.length)];\n      return randomImage;\n    }\n    \n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success === false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n          //console.log(data.trips);\n        }\n      }\n\n    }\n    function deleteTrip(trip_id)\n    {\n      alert(\"Deleteing the Trip \"+trip_id)\n      if(props.token !== \"\")\n        {\n          deleteTripIdApi(props.token, trip_id).then(data => console.log(data));\n        }\n      \n      \n    }\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [props.token, props.isAuth]);\n// <button className=\"tripsButton\">{trip.name} </button>\n  \n  if(isViewable){\n    return (\n      <div className=\"homePage\">\n        <h2>Hello, {firstName}!</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n        <div>\n          <button className=\"hideButton\" onClick={()=>{setHide(!hide)}} >Show / Hide Trips<br /></button>\n        </div>\n        {trips.map((trip, index) => {\n        return (\n        <div>\n        {!hide ? (\n        <div className=\"container\">\n        \n            <div className=\"col\">\n              <a href={`/#/trip/${trip.trip_id}`}>\n                <img className=\"images\" src={randomImages()}/>\n                <span className=\"align-middle\">{trip.name}</span>\n                <div>\n                  \n                </div>\n              </a>\n              <button type=\"submit\" onClick={()=>deleteTrip(trip.trip_id)}>Delete</button>\n              </div>\n            </div>\n       \n          ):null}\n        </div>\n        \n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<div>\n      <h2>Please log in!</h2>\n    </div>\n    );\n  }\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/CreateActivity.js",["87","88"],"import Login from './Login.js';\nimport {useState} from 'react';\nimport './App.css';\nimport { createActivityApi } from './api/api.js';\n\n//import { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\nfunction CreateActivity(props){\n  \n   // const [inputList, setInputList] = useState([{ activityName: \"\", amount: \"\", participants: \"\"  }]);\n    //const [showbtn, setShowBtn] = useState(true);\n    const [cost, setCost] = useState('');\n    const [name, setName] = useState('');\n    const [emails, setEmails] = useState('');\n    \n    function onSubmit(){\n      let arrayOfEmails = emails.split(',');\n      if(arrayOfEmails[0] == \"\")\n        arrayOfEmails = []\n      createActivityApi(props.token, props.trip, name, cost, arrayOfEmails).then(data => console.log(data)).then(data => props.refresh());\n    }\n    \n    return (\n      <div className=\"Activity\">\n            <div className=\"box\">\n              <h5> Create an activity </h5>\n              <input\n                required\n                type=\"text\"\n                \n                name=\"activityName\"\n                className=\"ml10\"\n                placeholder=\"Enter Activity Name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n              <input\n                required\n                type=\"text\"\n                name=\"amount\"\n                className=\"ml10\"\n                placeholder=\"Enter Cost\"\n                value={cost}\n                onChange={e => setCost(e.target.value)}\n              />\n              <input\n                required\n                type=\"text\"\n                className=\"ml101\"\n                name=\"participants\"\n                placeholder=\"Participant Email#1, Email#2,..\"\n                value={emails}\n                onChange={e => setEmails(e.target.value)}\n              />\n              <div className=\"btn-box\">\n                <button onClick={onSubmit}>Add</button>\n              </div>\n             \n            </div>\n      </div>\n    );\n}\n\nexport default CreateActivity;\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":13,"column":26,"nodeType":"95","messageId":"96","endLine":13,"endColumn":32},{"ruleId":"97","severity":1,"message":"98","line":31,"column":8,"nodeType":"99","endLine":31,"endColumn":10,"suggestions":"100"},{"ruleId":"93","severity":1,"message":"101","line":2,"column":17,"nodeType":"95","messageId":"96","endLine":2,"endColumn":25},{"ruleId":"93","severity":1,"message":"102","line":10,"column":53,"nodeType":"95","messageId":"96","endLine":10,"endColumn":57},{"ruleId":"93","severity":1,"message":"103","line":5,"column":20,"nodeType":"95","messageId":"96","endLine":5,"endColumn":27},{"ruleId":"93","severity":1,"message":"104","line":5,"column":44,"nodeType":"95","messageId":"96","endLine":5,"endColumn":58},{"ruleId":"93","severity":1,"message":"105","line":12,"column":12,"nodeType":"95","messageId":"96","endLine":12,"endColumn":21},{"ruleId":"93","severity":1,"message":"106","line":14,"column":12,"nodeType":"95","messageId":"96","endLine":14,"endColumn":20},{"ruleId":"93","severity":1,"message":"107","line":14,"column":22,"nodeType":"95","messageId":"96","endLine":14,"endColumn":33},{"ruleId":"93","severity":1,"message":"108","line":26,"column":13,"nodeType":"95","messageId":"96","endLine":26,"endColumn":28},{"ruleId":"97","severity":1,"message":"109","line":42,"column":7,"nodeType":"99","endLine":42,"endColumn":45,"suggestions":"110"},{"ruleId":"93","severity":1,"message":"111","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"97","severity":1,"message":"112","line":33,"column":7,"nodeType":"99","endLine":33,"endColumn":40,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":39,"column":114,"nodeType":"116","messageId":"117","endLine":39,"endColumn":116},{"ruleId":"114","severity":1,"message":"115","line":39,"column":165,"nodeType":"116","messageId":"117","endLine":39,"endColumn":167},{"ruleId":"97","severity":1,"message":"118","line":66,"column":8,"nodeType":"99","endLine":66,"endColumn":35,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":86,"column":17,"nodeType":"122","endLine":86,"endColumn":63},{"ruleId":"93","severity":1,"message":"111","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":18,"column":27,"nodeType":"116","messageId":"117","endLine":18,"endColumn":29},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'useState' is defined but never used.","'Link' is defined but never used.","'userApi' is defined but never used.","'setUserPaidApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'fullname' is assigned a value but never used.","'setFullname' is assigned a value but never used.","'newParticipants' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configureState' and 'tripId'. Either include them or remove the dependency array.",["126"],"'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.isAuth'. Either include them or remove the dependency array.",["127"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["128"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"137","text":"138"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, tripId, configureState]",{"range":"139","text":"140"},"Update the dependencies array to be: [props.token, props.refreshState, props.isAuth, props.id]",{"range":"141","text":"142"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"143","text":"144"},[1084,1086],"[isAuthenticated, tokenId]",[1494,1532],"[isLoading, props.token, props.isAuth, tripId, configureState]",[1160,1193],"[props.token, props.refreshState, props.isAuth, props.id]",[2258,2285],"[props.token, props.isAuth, updateData]"]