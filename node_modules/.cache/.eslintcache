[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/JoinTrip.js":"5","/home/ec2-user/environment/Project3/src/Nav.js":"6","/home/ec2-user/environment/Project3/src/CreateTrip.js":"7","/home/ec2-user/environment/Project3/src/Trip.js":"8","/home/ec2-user/environment/Project3/src/components/HomePage.js":"9","/home/ec2-user/environment/Project3/src/Logout.js":"10","/home/ec2-user/environment/Project3/src/Login.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/InputEmails.js":"13","/home/ec2-user/environment/Project3/src/refreshToken.js":"14"},{"size":500,"mtime":1617932993876,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1617824026869,"results":"17","hashOfConfig":"16"},{"size":2603,"mtime":1618954957321,"results":"18","hashOfConfig":"16"},{"size":707,"mtime":1618602875349,"results":"19","hashOfConfig":"16"},{"size":730,"mtime":1618933747783,"results":"20","hashOfConfig":"16"},{"size":1382,"mtime":1618958959984,"results":"21","hashOfConfig":"16"},{"size":3547,"mtime":1618933747751,"results":"22","hashOfConfig":"16"},{"size":840,"mtime":1618962886071,"results":"23","hashOfConfig":"16"},{"size":1936,"mtime":1618933747767,"results":"24","hashOfConfig":"16"},{"size":694,"mtime":1618857005755,"results":"25","hashOfConfig":"16"},{"size":1426,"mtime":1618933747779,"results":"26","hashOfConfig":"16"},{"size":1992,"mtime":1618929241798,"results":"27","hashOfConfig":"16"},{"size":1350,"mtime":1618933747767,"results":"28","hashOfConfig":"16"},{"size":720,"mtime":1617847354012,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"168wlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/ec2-user/environment/Project3/src/index.js",[],["61","62"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["63"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\n\n\nimport {BrowserRouter as Router, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <Router>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </Router>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/Activity.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/CreateTrip.js",[],"/home/ec2-user/environment/Project3/src/Trip.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["64"],"import { useState, useEffect } from 'react';\n// import Login from'../Login.js';\n// import Logout from'../Logout.js';\n//import {loginApi, userApi} from '../api/api.js';\nimport { userApi} from '../api/api.js';\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success === false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n        }\n      }\n    }\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [props.token, props.isAuth]);\n  \n  if(isViewable){\n    return (\n      <div>\n        <h2>Hello, {firstName}</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n        {trips.map((trip, index) => {\n        return (\n          <a href={`/trip/${trip.trip_id}`}><p key={`${trip}-${index}`}>Id: {trip.trip_id} - Name: {trip.name}</p></a>\n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<div>\n      <h2>Please log in!</h2>\n    </div>\n    );\n  }\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":31,"column":8,"nodeType":"71","endLine":31,"endColumn":10,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":42,"column":8,"nodeType":"71","endLine":42,"endColumn":35,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["77"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},{"desc":"81","fix":"82"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"83","text":"84"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"85","text":"86"},[1072,1074],"[isAuthenticated, tokenId]",[1361,1388],"[props.token, props.isAuth, updateData]"]