[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/Nav.js":"5","/home/ec2-user/environment/Project3/src/JoinTrip.js":"6","/home/ec2-user/environment/Project3/src/TripHome.js":"7","/home/ec2-user/environment/Project3/src/components/HomePage.js":"8","/home/ec2-user/environment/Project3/src/CreateTrip.js":"9","/home/ec2-user/environment/Project3/src/Login.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/refreshToken.js":"13","/home/ec2-user/environment/Project3/src/InputEmails.js":"14"},{"size":500,"mtime":1617893326172,"results":"15","hashOfConfig":"16"},{"size":2520,"mtime":1618857693025,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1617893326172,"results":"18","hashOfConfig":"16"},{"size":707,"mtime":1618546369779,"results":"19","hashOfConfig":"16"},{"size":1265,"mtime":1618857886452,"results":"20","hashOfConfig":"16"},{"size":586,"mtime":1618594605792,"results":"21","hashOfConfig":"16"},{"size":441,"mtime":1618857780453,"results":"22","hashOfConfig":"16"},{"size":1856,"mtime":1618858605708,"results":"23","hashOfConfig":"16"},{"size":3440,"mtime":1618857098725,"results":"24","hashOfConfig":"16"},{"size":1492,"mtime":1618857842512,"results":"25","hashOfConfig":"16"},{"size":694,"mtime":1618857088165,"results":"26","hashOfConfig":"16"},{"size":1479,"mtime":1618857088169,"results":"27","hashOfConfig":"16"},{"size":720,"mtime":1617991110130,"results":"28","hashOfConfig":"16"},{"size":1459,"mtime":1618857088173,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"168wlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/home/ec2-user/environment/Project3/src/index.js",[],["66","67"],"/home/ec2-user/environment/Project3/src/App.js",["68","69","70"],"import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport TripHome from './TripHome';\n\n\nimport {BrowserRouter as Router, Switch,Route} from \"react-router-dom\";\n\nfunction App(props) {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth != undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    \n    return (\n    <Router>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/Home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/Activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/JoinTrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/CreateTrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/TripHome\" render={(props) => ( <TripHome logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </Router>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/TripHome.js",["71"],"  \nimport React from 'react';\nimport Login from './Login.js';\nfunction TripHome(props)\n{console.log(props.name)\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your TripHome!</h3></div>\n             <div><button>Click</button></div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default TripHome;","/home/ec2-user/environment/Project3/src/components/HomePage.js",["72","73","74","75","76","77"],"import React, { useState, useEffect } from 'react';\nimport Login from'../Login.js';\nimport Logout from'../Logout.js';\nimport {loginApi, userApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success == false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n        }\n      }\n    }\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token != \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [props.token, props.isAuth]);\n  \n  if(isViewable){\n    return (\n      <div>\n        <h2>Hello, {firstName}</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n        {trips.map((trip, index) => {\n        return (\n          <p key={`${trip}-${index}`}>Id: {trip.trip_id} - Name: {trip.name}</p>\n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<div>\n      <h2>Please log in!</h2>\n    </div>\n    );\n  }\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/CreateTrip.js",["78","79","80","81"],"import Login from './Login.js';\nimport TripHome from './TripHome';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport InputEmails from './InputEmails';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n//import 'react-datetime/css/react-datetime.css';\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n    const history = useHistory();\n    //const user = useState('');\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    // Random invitation code\n    var result = '';\n    \n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      console.log(data);\n      // doesnt redirect till all fields are filled up\n      history.push(\"/TripHome\");\n  }\n  \n  function invitationCode(){\n    var chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    for (var i = 7; i > 0; --i) result += chars[Math.floor(Math.random() * chars.length)];\n    // result is the random Code that must be emailed to the participants\n    return result;\n  }\n\n    return(\n        <div className=\"activity\">\n            {props.isAuth?(\n            <div>\n                <h3>Welcome to your Create Trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                        <div><label for=\"Name\" className=\"labels\">Trip Name:</label>\n                        <input required type=\"text\" id=\"Name\" className=\"createTripInputs\" placeholder=\"Trip Name*\" {...register(\"Trip Name\", {required: true, maxLength: 17})} /></div>\n\n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"tripStart\" className=\"labels\">Trip's Start Date:</label>\n                        <input required type=\"date\" id=\"tripStart\" className=\"createTripInputs\" placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"tripEnd\" className=\"labels\">Trip's End Date:</label>\n                        <input required type=\"date\" id=\"tripEnd\" className=\"createTripInputs\" placeholder=\"End Date\" {...register(\"End Date\", {required: true})} /></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        \n                        <div><label className=\"labels\">Enter Participant's Gmail Accounts:</label>\n                        <InputEmails register={register}/></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        <div><button type=\"submit\">Submit</button></div>\n                        <div>{invitationCode()}</div>\n                </form>\n            </div>)\n            :null}\n\n            <Router>\n                <div>\n                    <Route path=\"/TripHome\" component={TripHome}/>\n                </div>\n            </Router>\n\n                \n        </div>\n        );\n}\n\nexport default CreateTrip;\n","/home/ec2-user/environment/Project3/src/Login.js",["82","83","84"],"import React from 'react';\n\nimport {GoogleLogin} from 'react-google-login';\n\nimport {refreshTokenSetup} from './refreshToken.js';\nimport {loginApi} from './api/api.js';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props)\n{\n    //const [email,setEmail] = useState('');\n    //const [name,setName] = useState('');\n    //const [tokenId, setTokenId] = useState('');\n    //const [givenName,setGivenName] = useState('');\n   // const [logStatus,setLogStatus] = useState(false);\n    const history = useHistory();\n\n    const onSuccess= (res)=>\n    {\n        console.log('[Login Success] currentUser:',res.tokenId);\n        loginApi(res.tokenId).then(data => console.log('Verified API login:', data)).then(result => props.login(res.tokenId));\n        refreshTokenSetup(res);\n        history.push('/Home');\n    };\n    const onFailure = (res)=> \n    {\n        console.log('[Login failed] res: ',res);\n    }\n\n    return (\n            <div>\n                <div>\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy ={'single_host_origin'}\n                    style ={{marginTop: '100px'}}\n                    isSignedIn={false}\n                />\n                </div>\n            </div>\n            );\n}\n\nexport default Login;","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",["85","86"],"const fetch = require(\"node-fetch\");\n\nconst loginApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst logoutApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/logout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst userApi = (tokenId) => {\n    return fetch('/api/user', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\n\nconst joinTripApi = (tokenId) => {\n    return fetch('/api/joinTrip', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\nconst tripIdApi = (tokenId) => {\n    return fetch('/api/trip/trip_id={id}', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\nexport {\n    loginApi,\n    logoutApi,\n    userApi\n}","/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",["87","88","89","90"],"import Login from './Login.js';\nimport TripHome from './TripHome';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport CreateTrip from './CreateTrip';\n\nfunction InputEmails(props) {\n  // email consists of the list of all emails\n  const [email, setEmail] = useState([{ value: null }]);\n \n  function handleChange(i, event) {\n    const values = [...email];\n    values[i].value = event.target.value;\n    setEmail(values);\n  }\n  console.log(email)\n\n  function handleAdd() {\n    const values = [...email];\n    values.push({ value: null });\n    setEmail(values);\n  }\n\n  function handleRemove(i) {\n    const values = [...email];\n    values.splice(i, 1);\n    setEmail(values);\n  }\n\n  return (\n    <div className=\"inputEmail\">\n\n      {email.map((field, idx) => {\n        return (\n          <div key={`${field}-${idx}`}>\n            <input required\n              className=\"createTripInputs\"\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={e => handleChange(idx, e)}\n              {...props.register(\"Email\", {required: true})}\n            />\n            <button type=\"button\" className=\"removeParticipants\" onClick={() => handleRemove(idx)}>\n              Remove\n            </button>\n          </div>\n        );\n      })}\n\n      <button type=\"button\" onClick={() => handleAdd()}>\n        Add Participant\n      </button>\n      \n    </div>\n  );\n}\nexport default InputEmails;\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":12},{"ruleId":"99","severity":1,"message":"100","line":26,"column":21,"nodeType":"101","messageId":"102","endLine":26,"endColumn":23},{"ruleId":"103","severity":1,"message":"104","line":32,"column":8,"nodeType":"105","endLine":32,"endColumn":10,"suggestions":"106"},{"ruleId":"95","severity":1,"message":"107","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":13},{"ruleId":"95","severity":1,"message":"107","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":13},{"ruleId":"95","severity":1,"message":"108","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"109","line":4,"column":9,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"99","severity":1,"message":"110","line":17,"column":25,"nodeType":"101","messageId":"102","endLine":17,"endColumn":27},{"ruleId":"99","severity":1,"message":"100","line":32,"column":22,"nodeType":"101","messageId":"102","endLine":32,"endColumn":24},{"ruleId":"103","severity":1,"message":"111","line":42,"column":8,"nodeType":"105","endLine":42,"endColumn":35,"suggestions":"112"},{"ruleId":"95","severity":1,"message":"107","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"113","line":3,"column":17,"nodeType":"97","messageId":"98","endLine":3,"endColumn":25},{"ruleId":"95","severity":1,"message":"114","line":7,"column":53,"nodeType":"97","messageId":"98","endLine":7,"endColumn":57},{"ruleId":"95","severity":1,"message":"115","line":14,"column":50,"nodeType":"97","messageId":"98","endLine":14,"endColumn":56},{"ruleId":"95","severity":1,"message":"116","line":7,"column":39,"nodeType":"97","messageId":"98","endLine":7,"endColumn":45},{"ruleId":"95","severity":1,"message":"117","line":7,"column":46,"nodeType":"97","messageId":"98","endLine":7,"endColumn":51},{"ruleId":"95","severity":1,"message":"114","line":7,"column":53,"nodeType":"97","messageId":"98","endLine":7,"endColumn":57},{"ruleId":"95","severity":1,"message":"118","line":36,"column":7,"nodeType":"97","messageId":"98","endLine":36,"endColumn":18},{"ruleId":"95","severity":1,"message":"119","line":46,"column":7,"nodeType":"97","messageId":"98","endLine":46,"endColumn":16},{"ruleId":"95","severity":1,"message":"107","line":1,"column":8,"nodeType":"97","messageId":"98","endLine":1,"endColumn":13},{"ruleId":"95","severity":1,"message":"120","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"121","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":17},{"ruleId":"95","severity":1,"message":"122","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'Login' is defined but never used.","'Logout' is defined but never used.","'loginApi' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["126"],"'useState' is defined but never used.","'Link' is defined but never used.","'errors' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'joinTripApi' is assigned a value but never used.","'tripIdApi' is assigned a value but never used.","'TripHome' is defined but never used.","'useForm' is defined but never used.","'CreateTrip' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"131","text":"132"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"133","text":"134"},[1095,1097],"[isAuthenticated, tokenId]",[1319,1346],"[props.token, props.isAuth, updateData]"]