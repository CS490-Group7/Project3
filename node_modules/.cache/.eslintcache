[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Login.js":"4","/home/ec2-user/environment/Project3/src/Logout.js":"5","/home/ec2-user/environment/Project3/src/Dashboard.js":"6","/home/ec2-user/environment/Project3/src/refreshToken.js":"7","/home/ec2-user/environment/Project3/src/api/api.js":"8","/home/ec2-user/environment/Project3/src/Nav.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10"},{"size":500,"mtime":1617893326172,"results":"11","hashOfConfig":"12"},{"size":2050,"mtime":1618190909445,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1617893326172,"results":"14","hashOfConfig":"12"},{"size":1661,"mtime":1618252411739,"results":"15","hashOfConfig":"12"},{"size":794,"mtime":1618190909445,"results":"16","hashOfConfig":"12"},{"size":776,"mtime":1618252411739,"results":"17","hashOfConfig":"12"},{"size":720,"mtime":1617991110130,"results":"18","hashOfConfig":"12"},{"size":1015,"mtime":1618190909449,"results":"19","hashOfConfig":"12"},{"size":815,"mtime":1618190909445,"results":"20","hashOfConfig":"12"},{"size":526,"mtime":1618190909449,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"168wlww",{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},"/home/ec2-user/environment/Project3/src/index.js",[],"/home/ec2-user/environment/Project3/src/App.js",["48","49","50","51","52","53","54","55"],"import logo from './logo.svg';\nimport React, { useState, Component } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\n\nimport {BrowserRouter as Router, Switch,Route,Link} from \"react-router-dom\";\n\nclass App extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        isAuthenticated: false,\n        tokenId: ''\n      }\n    }\n  \n      // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    componentDidMount() {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = this.state.isAuthenticated;\n      let newToken = this.state.tokenId;\n      if(storedAuth != undefined)\n        newAuth = storedAuth;\n      if(storedTokenId != undefined)\n        newToken = storedTokenId;\n      this.setState({ isAuthenticated: newAuth, tokenId: newToken });\n    }\n  \n    // Allows children of components to update the global 'logged in' state.\n    authHandler = (auth) => {\n      let data = this.state;\n      data['isAuthenticated'] = auth;\n      this.setState(data);\n      localStorage.setItem(\"isAuth\", auth);\n    }\n    \n    // Allows children of components to update the global 'token ID' state.\n    tokenHandler = (tokenId) => {\n        const data = this.state;\n        data['tokenId'] = tokenId;\n        this.setState(data);\n        localStorage.setItem('tokenId', tokenId );\n    }\n\n  render() {\n    return (\n    <Router>\n    <div className=\"App\">\n        <Nav auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId}/>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => ( <HomePage auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId} /> )}/>\n        </Switch>\n      </div>\n    </Router>);\n  }\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Login.js",["56","57","58"],"import React, { useState } from 'react';\nimport dotenv from 'dotenv';\nimport {GoogleLogin} from 'react-google-login';\n\nimport {refreshTokenSetup} from './refreshToken.js';\nimport {loginApi} from './api/api.js';\nimport Dashboard from './Dashboard';\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props)\n{\n    //const [email,setEmail] = useState('');\n    //const [name,setName] = useState('');\n    //const [tokenId, setTokenId] = useState('');\n    //const [givenName,setGivenName] = useState('');\n    const [logStatus,setLogStatus] = useState(false);\n    \n    const onSuccess= (res)=>\n    {\n        console.log('[Login Success] currentUser:',res.tokenId);\n        loginApi(res.tokenId).then(data => console.log('Verified API login:', data));\n        //setTokenId(res.tokenId);\n        //setEmail(res.profileObj['email']);\n        //setName(res.profileObj['name']);\n        //setGivenName(res.profileObj['givenName']);\n        setLogStatus(true);\n        refreshTokenSetup(res);\n        props.authHandler(true);\n        props.tokenHandler(res.tokenId);\n    };\n    const onFailure = (res)=> \n    {\n        console.log('[Login failed] res: ',res);\n    }\n\n    return (\n            <div>\n                <div>\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy ={'single_host_origin'}\n                    style ={{marginTop: '100px'}}\n                    isSignedIn={false}\n                />\n                </div>\n            </div>\n            );\n}\n\nexport default Login;","/home/ec2-user/environment/Project3/src/Logout.js",["59","60"],"import React from 'react';\nimport dotenv from 'dotenv'\nimport Login from'./Login.js';\nimport { GoogleLogout } from 'react-google-login';\nimport {logoutApi} from './api/api.js';\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Logout(props)\n{\n    const onSuccess=()=>\n    {\n        logoutApi(props.currentToken).then(data => console.log('Verified API logout:', data));\n        props.authHandler(false);\n        props.tokenHandler(\"\");\n        console.log('Logout made successfully');\n    };\n    \n    return(\n        <div>\n                <GoogleLogout\n                clientId={clientId}\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n                style ={{marginTop: '100px'}}\n                />\n        </div>\n        );\n}\nexport default Logout;","/home/ec2-user/environment/Project3/src/Dashboard.js",["61","62","63","64","65"],"import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction Dashboard(props){\n    return(\n        <div>\n            <ul>GIVEN NAME: {(props.givenName).charAt(0).toUpperCase() + (props.givenName).slice(1)}</ul>\n            <ul>FULLNAME: {props.name}</ul>\n            <ul>EMAIL: {props.email}</ul>\n            <Logout/>\n            <Router>\n                <div>\n                    <ul to='/logout'></ul>\n                    <Route path=\"/logout\" component={Logout} />\n                </div>\n            </Router>\n            \n        </div>\n        );\n}\n\nexport default Dashboard;\n","/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",["66","67","68","69","70","71"],"import logo from './logo.svg';\nimport React, { useState, Component } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\n\nimport {BrowserRouter as Router, Switch,Route,Link} from \"react-router-dom\";\n\nclass Nav extends React.Component {\n    render(){\n        return(\n    <nav className='navStyle'>\n        <h1>Stipend</h1>\n        <ul className=\"nav-links\">\n            <Link className='navStyle'to=\"/\">\n              <li>Home</li>\n            </Link>\n            { !this.props.isAuth && <Login tokenHandler={this.props.token} authHandler={this.props.auth}/> }\n            { this.props.isAuth && <Logout tokenHandler={this.props.token} authHandler={this.props.auth} currentToken={this.props.currentToken} /> }\n        </ul>\n    </nav>\n    );\n    }\n}\n\nexport default Nav;","/home/ec2-user/environment/Project3/src/components/HomePage.js",["72","73","74","75"],"import React, { useState } from 'react';\nimport Login from'../Login.js';\nimport Logout from'../Logout.js';\nimport {loginApi, userApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n  function onClickButton() {\n    userApi(props.currentToken).then(data => console.log('Verified Status:', data));\n  }\n  \n  return (\n    <div>\n      { props.isAuth && 'Token ID: ' && props.currentToken }\n      <p>\n        <button onClick={onClickButton} type=\"button\">Test API</button>\n      </p>\n    </div>\n  )\n}\n\nexport default HomePage;",{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"81","line":2,"column":27,"nodeType":"78","messageId":"79","endLine":2,"endColumn":36},{"ruleId":"76","severity":1,"message":"82","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":14},{"ruleId":"76","severity":1,"message":"84","line":9,"column":47,"nodeType":"78","messageId":"79","endLine":9,"endColumn":51},{"ruleId":"85","severity":1,"message":"86","line":27,"column":21,"nodeType":"87","messageId":"88","endLine":27,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":29,"column":24,"nodeType":"87","messageId":"88","endLine":29,"endColumn":26},{"ruleId":"76","severity":1,"message":"89","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"90","line":7,"column":8,"nodeType":"78","messageId":"79","endLine":7,"endColumn":17},{"ruleId":"76","severity":1,"message":"91","line":17,"column":12,"nodeType":"78","messageId":"79","endLine":17,"endColumn":21},{"ruleId":"76","severity":1,"message":"89","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"82","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"82","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":13},{"ruleId":"76","severity":1,"message":"92","line":8,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":9},{"ruleId":"76","severity":1,"message":"84","line":10,"column":3,"nodeType":"78","messageId":"79","endLine":10,"endColumn":7},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":12},{"ruleId":"76","severity":1,"message":"80","line":2,"column":17,"nodeType":"78","messageId":"79","endLine":2,"endColumn":25},{"ruleId":"76","severity":1,"message":"81","line":2,"column":27,"nodeType":"78","messageId":"79","endLine":2,"endColumn":36},{"ruleId":"76","severity":1,"message":"93","line":7,"column":26,"nodeType":"78","messageId":"79","endLine":7,"endColumn":32},{"ruleId":"76","severity":1,"message":"92","line":7,"column":34,"nodeType":"78","messageId":"79","endLine":7,"endColumn":40},{"ruleId":"76","severity":1,"message":"94","line":7,"column":41,"nodeType":"78","messageId":"79","endLine":7,"endColumn":46},{"ruleId":"76","severity":1,"message":"80","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"82","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"76","severity":1,"message":"83","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"76","severity":1,"message":"95","line":4,"column":9,"nodeType":"78","messageId":"79","endLine":4,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Component' is defined but never used.","'Login' is defined but never used.","'Logout' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'dotenv' is defined but never used.","'Dashboard' is defined but never used.","'logStatus' is assigned a value but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'loginApi' is defined but never used."]