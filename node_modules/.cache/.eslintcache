[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/Login.js":"4","/home/ec2-user/environment/Project3/src/Logout.js":"5","/home/ec2-user/environment/Project3/src/Dashboard.js":"6","/home/ec2-user/environment/Project3/src/refreshToken.js":"7"},{"size":500,"mtime":1617893326172,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1617893326172,"results":"10","hashOfConfig":"9"},{"size":635,"mtime":1617981801811,"results":"11","hashOfConfig":"9"},{"size":2065,"mtime":1617980819399,"results":"12","hashOfConfig":"9"},{"size":669,"mtime":1617936892180,"results":"13","hashOfConfig":"9"},{"size":535,"mtime":1617937479968,"results":"14","hashOfConfig":"9"},{"size":720,"mtime":1617936650372,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"168wlww",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/home/ec2-user/environment/Project3/src/index.js",[],["35","36"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["37","38","39","40"],"import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport Dashboard from './Dashboard';\n\nfunction App() {\n  \n  // const [login, setLogin] = useState(false);\n  // const [name, setName] = useState('');\n  \n  // const log = (username) => {\n  //   setNewUser(username);\n  //   setLogin(!login);\n  // };\n  \n// if(name != ''){\n//   return (name);\n// }\n// else{\n    return (\n      <div className=\"App\">\n      <h1 className='heading'><i>STIPEND, Trips Made Easy </i></h1>\n        <Login />\n      </div>\n    );\n  }\n//}\n\nexport default App;\n","/home/ec2-user/environment/Project3/src/Login.js",["41"],"import React, { useState } from 'react';\nimport dotenv from 'dotenv';\nimport {GoogleLogin,GoogleLogout} from 'react-google-login';\n\nimport {refreshTokenSetup} from './refreshToken.js';\nimport Dashboard from './Dashboard';\n\n\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\n\n\nfunction Login()\n{\n    const [email,setEmail] = useState('');\n    const [name,setName] = useState('');\n    const [givenName,setGivenName] = useState('');\n    const [logStatus,setLogStatus] = useState(false);\n    \n    \n    const onSuccessLogout=()=>\n    {\n        alert('Logout made successfully');\n        console.log('Logout made successfully');\n    };\n    \n    \n    const onSuccess= (res)=>\n    {\n        console.log('[Login Success] currentUser:',res.profileObj);\n        setEmail(res.profileObj['email']);\n        setName(res.profileObj['name']);\n        setGivenName(res.profileObj['givenName']);\n        setLogStatus(true);\n        // setName(givenName);\n        // refreshed token after an hour\n        refreshTokenSetup(res);\n    };\n    const onFailure = (res)=> \n    {\n        console.log('[Login failed] res:',res);\n    }\n    if(logStatus){\n        return (\n            <div>\n            <Dashboard email={email} name={name} givenName={givenName} setLogStatus={setLogStatus}/>\n           <div>\n                <GoogleLogout\n                clientId={clientId}\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccessLogout}\n                style ={{marginTop: '100px'}}\n                />\n            </div>\n            </div>\n        );\n    }\n    else{\n        return (\n            <div>\n                <div>\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy ={'single_host_origin'}\n                    style ={{marginTop: '100px'}}\n                    isSignedIn={true}\n                />\n                </div>\n            </div>\n            );\n    }\n}\n\nexport default Login;\n","/home/ec2-user/environment/Project3/src/Logout.js",["42","43"],"import React from 'react';\nimport dotenv from 'dotenv'\nimport Login from'./Login.js';\nimport {GoogleLogout} from 'react-google-login';\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\n\nfunction Logout()\n{\n    const onSuccess=()=>\n    {\n        alert('Logout made successfully');\n        console.log('Logout made successfully');\n    };\n    \n    return(\n        <div>\n\n            <div>\n                <GoogleLogout\n                clientId={clientId}\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n                style ={{marginTop: '100px'}}\n                />\n            </div>\n\n        </div>\n        );\n}\nexport default Logout;","/home/ec2-user/environment/Project3/src/Dashboard.js",["44","45","46","47"],"import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\n\n\nfunction Dashboard(props){\n\n    return(\n        <div>\n            <ul>GIVEN NAME: {(props.givenName).charAt(0).toUpperCase() + (props.givenName).slice(1)}</ul>\n            <ul>FULLNAME: {props.name}</ul>\n            <ul>EMAIL: {props.email}</ul>\n           \n        </div>\n        );\n}\n//<button onClick={props.setLogStatus(false)}>BUTTTTTTON</button>\nexport default Dashboard;","/home/ec2-user/environment/Project3/src/refreshToken.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},{"ruleId":"52","severity":1,"message":"57","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":14},{"ruleId":"52","severity":1,"message":"58","line":6,"column":8,"nodeType":"54","messageId":"55","endLine":6,"endColumn":17},{"ruleId":"52","severity":1,"message":"59","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"52","severity":1,"message":"59","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"52","severity":1,"message":"60","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":25},{"ruleId":"52","severity":1,"message":"60","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":5,"column":8,"nodeType":"54","messageId":"55","endLine":5,"endColumn":14},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Logout' is defined but never used.","'Dashboard' is defined but never used.","'dotenv' is defined but never used.","'Login' is defined but never used.","no-global-assign","no-unsafe-negation"]