[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/Nav.js":"5","/home/ec2-user/environment/Project3/src/JoinTrip.js":"6","/home/ec2-user/environment/Project3/src/TripHome.js":"7","/home/ec2-user/environment/Project3/src/components/HomePage.js":"8","/home/ec2-user/environment/Project3/src/CreateTrip.js":"9","/home/ec2-user/environment/Project3/src/Login.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/refreshToken.js":"13","/home/ec2-user/environment/Project3/src/InputEmails.js":"14","/home/ec2-user/environment/Project3/src/Trip.js":"15"},{"size":500,"mtime":1617893326172,"results":"16","hashOfConfig":"17"},{"size":2498,"mtime":1618929432108,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"17"},{"size":707,"mtime":1618546369779,"results":"20","hashOfConfig":"17"},{"size":1265,"mtime":1618857886452,"results":"21","hashOfConfig":"17"},{"size":768,"mtime":1618887006015,"results":"22","hashOfConfig":"17"},{"size":441,"mtime":1618857780453,"results":"23","hashOfConfig":"17"},{"size":1895,"mtime":1618887006015,"results":"24","hashOfConfig":"17"},{"size":3460,"mtime":1618887006015,"results":"25","hashOfConfig":"17"},{"size":1492,"mtime":1618857842512,"results":"26","hashOfConfig":"17"},{"size":694,"mtime":1618857088165,"results":"27","hashOfConfig":"17"},{"size":1992,"mtime":1618887534496,"results":"28","hashOfConfig":"17"},{"size":720,"mtime":1617991110130,"results":"29","hashOfConfig":"17"},{"size":1386,"mtime":1618887006015,"results":"30","hashOfConfig":"17"},{"size":958,"mtime":1618929235105,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"168wlww",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ec2-user/environment/Project3/src/index.js",[],["70","71"],"/home/ec2-user/environment/Project3/src/App.js",["72","73","74"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",["75","76"],"import Login from './Login.js';\nimport React, { useRef } from 'react';\nimport { joinTripApi } from './api/api.js';\nimport './App.css';\n\nfunction JoinTrip(props){\n    const user = useRef('');\n   \n    function joinTrip(joinCode){\n        if(props.token != \"\"){\n            joinTripApi(props.token, joinCode).then(data => console.log('Tried joining code' + joinCode, data));\n        }\n    }\n    \n    return(\n        <div className=\"activity\">\n             {props.isAuth ?\n             (<div><h3>Welcome to your Join Page!</h3>\n              <input ref={user} type=\"text\" />\n              <button onClick={()=>joinTrip(user.current.value)} type=\"submit\" required>Enter</button>\n             </div>)\n             :null}\n        </div>\n        );\n}\n\nexport default JoinTrip;","/home/ec2-user/environment/Project3/src/TripHome.js",["77"],"  \nimport React from 'react';\nimport Login from './Login.js';\nfunction TripHome(props)\n{console.log(props.name)\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your TripHome!</h3></div>\n             <div><button>Click</button></div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default TripHome;",["78","79"],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["80","81","82","83","84","85"],"import React, { useState, useEffect } from 'react';\nimport Login from'../Login.js';\nimport Logout from'../Logout.js';\nimport {loginApi, userApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success == false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n        }\n      }\n    }\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token != \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [props.token, props.isAuth]);\n  \n  if(isViewable){\n    return (\n      <div>\n        <h2 >Hello, {firstName}</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n        {trips.map((trip, index) => {\n        return (\n          <a href={`/trip/${trip.trip_id}`}><p key={`${trip}-${index}`}>Id: {trip.trip_id} - Name: {trip.name}</p></a>\n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<div>\n      <h2>Please log in!</h2>\n    </div>\n    );\n  }\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/CreateTrip.js",["86","87","88","89"],"import Login from './Login.js';\nimport Trip from './Trip';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport InputEmails from './InputEmails';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n//import 'react-datetime/css/react-datetime.css';\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n    const history = useHistory();\n    //const user = useState('');\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      console.log(data);\n      // doesnt redirect till all fields are filled up\n      history.push(\"/trip\");\n  }\n\n    return(\n        <div className=\"activity\">\n            {props.isAuth?(\n            <div>\n                <h3>Welcome to your Create Trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                        <div><label for=\"Name\" className=\"labels\">Trip Name:</label>\n                        <input required type=\"text\" id=\"Name\" className=\"createTripInputs\" placeholder=\"Trip Name*\" {...register(\"Trip Name\", {required: true, maxLength: 17})} /></div>\n\n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"tripStart\" className=\"labels\">Trip's Start Date:</label>\n                        <input required type=\"date\" id=\"tripStart\" className=\"createTripInputs\" placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"tripEnd\" className=\"labels\">Trip's End Date:</label>\n                        <input required type=\"date\" id=\"tripEnd\" className=\"createTripInputs\" placeholder=\"End Date\" {...register(\"End Date\", {required: true})}/></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label className=\"labels\">Enter Participant's Gmail Accounts: </label>\n                        <InputEmails/></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"JoinCode\" className=\"labels\">Create Join Code:</label></div>\n                        <div><input required type=\"text\" id=\"JoinCode\" className=\"createTripInputs\" placeholder=\"Join Code\" pattern=\"^[a-zA-Z0-9]*$\" maxLength=\"7\" {...register(\"Join Code\", {required: true, maxLength: 7})} /></div>\n                        <div className=\"lines\">____________________________________________________________________________________</div>\n\n                        <div><button type=\"submit\">Submit</button></div>\n                </form>\n            </div>)\n            :null}\n\n            <Router>\n                <div>\n                    <Route path=\"/trip\" component={Trip}/>\n                </div>\n            </Router>\n\n                \n        </div>\n        );\n}\n\nexport default CreateTrip;\n","/home/ec2-user/environment/Project3/src/Login.js",["90","91","92"],"import React from 'react';\n\nimport {GoogleLogin} from 'react-google-login';\n\nimport {refreshTokenSetup} from './refreshToken.js';\nimport {loginApi} from './api/api.js';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props)\n{\n    //const [email,setEmail] = useState('');\n    //const [name,setName] = useState('');\n    //const [tokenId, setTokenId] = useState('');\n    //const [givenName,setGivenName] = useState('');\n   // const [logStatus,setLogStatus] = useState(false);\n    const history = useHistory();\n\n    const onSuccess= (res)=>\n    {\n        console.log('[Login Success] currentUser:',res.tokenId);\n        loginApi(res.tokenId).then(data => console.log('Verified API login:', data)).then(result => props.login(res.tokenId));\n        refreshTokenSetup(res);\n        history.push('/Home');\n    };\n    const onFailure = (res)=> \n    {\n        console.log('[Login failed] res: ',res);\n    }\n\n    return (\n            <div>\n                <div>\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy ={'single_host_origin'}\n                    style ={{marginTop: '100px'}}\n                    isSignedIn={false}\n                />\n                </div>\n            </div>\n            );\n}\n\nexport default Login;","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",["93","94","95","96"],"import Login from './Login.js';\nimport Trip from './Trip';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport CreateTrip from './CreateTrip';\n\nfunction InputEmails() {\n  // email consists of the list of all emails\n  const [email, setEmail] = useState([{ value: null }]);\n \n  function handleChange(i, event) {\n    const values = [...email];\n    values[i].value = event.target.value;\n    setEmail(values);\n  }\n  console.log(email)\n\n  function handleAdd() {\n    const values = [...email];\n    values.push({ value: null });\n    setEmail(values);\n  }\n\n  function handleRemove(i) {\n    const values = [...email];\n    values.splice(i, 1);\n    setEmail(values);\n  }\n\n\n  return (\n    <div className=\"inputEmail\">\n\n      {email.map((field, idx) => {\n        return (\n          <div key={`${field}-${idx}`}>\n            <input required\n              className=\"createTripInputs\"\n              type=\"text\"\n              placeholder=\"Email\"\n              onChange={e => handleChange(idx, e)}\n            />\n            <button type=\"button\" className=\"removeParticipants\" onClick={() => handleRemove(idx)}>\n              Remove\n            </button>\n          </div>\n        );\n      })}\n\n      <button type=\"button\" onClick={() => handleAdd()}>\n        Add Participant\n      </button>\n      \n    </div>\n  );\n}\nexport default InputEmails;\n","/home/ec2-user/environment/Project3/src/Trip.js",["97","98","99","100","101","102","103","104","105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":12},{"ruleId":"114","severity":1,"message":"115","line":26,"column":21,"nodeType":"116","messageId":"117","endLine":26,"endColumn":23},{"ruleId":"118","severity":1,"message":"119","line":32,"column":8,"nodeType":"120","endLine":32,"endColumn":10,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"115","line":10,"column":24,"nodeType":"116","messageId":"117","endLine":10,"endColumn":26},{"ruleId":"110","severity":1,"message":"122","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":13},{"ruleId":"106","replacedBy":"123"},{"ruleId":"108","replacedBy":"124"},{"ruleId":"110","severity":1,"message":"122","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"125","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"126","line":4,"column":9,"nodeType":"112","messageId":"113","endLine":4,"endColumn":17},{"ruleId":"114","severity":1,"message":"127","line":17,"column":25,"nodeType":"116","messageId":"117","endLine":17,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":32,"column":22,"nodeType":"116","messageId":"117","endLine":32,"endColumn":24},{"ruleId":"118","severity":1,"message":"128","line":42,"column":8,"nodeType":"120","endLine":42,"endColumn":35,"suggestions":"129"},{"ruleId":"110","severity":1,"message":"122","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"130","line":3,"column":17,"nodeType":"112","messageId":"113","endLine":3,"endColumn":25},{"ruleId":"110","severity":1,"message":"131","line":7,"column":53,"nodeType":"112","messageId":"113","endLine":7,"endColumn":57},{"ruleId":"110","severity":1,"message":"132","line":13,"column":50,"nodeType":"112","messageId":"113","endLine":13,"endColumn":56},{"ruleId":"110","severity":1,"message":"133","line":7,"column":39,"nodeType":"112","messageId":"113","endLine":7,"endColumn":45},{"ruleId":"110","severity":1,"message":"134","line":7,"column":46,"nodeType":"112","messageId":"113","endLine":7,"endColumn":51},{"ruleId":"110","severity":1,"message":"131","line":7,"column":53,"nodeType":"112","messageId":"113","endLine":7,"endColumn":57},{"ruleId":"110","severity":1,"message":"122","line":1,"column":8,"nodeType":"112","messageId":"113","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"135","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":12},{"ruleId":"110","severity":1,"message":"136","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":17},{"ruleId":"110","severity":1,"message":"137","line":6,"column":8,"nodeType":"112","messageId":"113","endLine":6,"endColumn":18},{"ruleId":"110","severity":1,"message":"122","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"138","line":3,"column":8,"nodeType":"112","messageId":"113","endLine":3,"endColumn":16},{"ruleId":"110","severity":1,"message":"139","line":12,"column":12,"nodeType":"112","messageId":"113","endLine":12,"endColumn":20},{"ruleId":"110","severity":1,"message":"140","line":12,"column":22,"nodeType":"112","messageId":"113","endLine":12,"endColumn":33},{"ruleId":"110","severity":1,"message":"141","line":13,"column":12,"nodeType":"112","messageId":"113","endLine":13,"endColumn":21},{"ruleId":"110","severity":1,"message":"142","line":13,"column":23,"nodeType":"112","messageId":"113","endLine":13,"endColumn":35},{"ruleId":"110","severity":1,"message":"143","line":14,"column":12,"nodeType":"112","messageId":"113","endLine":14,"endColumn":21},{"ruleId":"110","severity":1,"message":"144","line":14,"column":23,"nodeType":"112","messageId":"113","endLine":14,"endColumn":35},{"ruleId":"114","severity":1,"message":"115","line":18,"column":38,"nodeType":"116","messageId":"117","endLine":18,"endColumn":40},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["147"],"'Login' is defined but never used.",["145"],["146"],"'Logout' is defined but never used.","'loginApi' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["148"],"'useState' is defined but never used.","'Link' is defined but never used.","'errors' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Trip' is defined but never used.","'useForm' is defined but never used.","'CreateTrip' is defined but never used.","'ReactDOM' is defined but never used.","'tripName' is assigned a value but never used.","'setTripName' is assigned a value but never used.","'tripOwner' is assigned a value but never used.","'setTripOwner' is assigned a value but never used.","'tripUsers' is assigned a value but never used.","'setTripUsers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"153","text":"154"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"155","text":"156"},[1087,1089],"[isAuthenticated, tokenId]",[1319,1346],"[props.token, props.isAuth, updateData]"]