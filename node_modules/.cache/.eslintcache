[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/CreateTrip.js":"4","/home/ec2-user/environment/Project3/src/LandingPage.js":"5","/home/ec2-user/environment/Project3/src/Nav.js":"6","/home/ec2-user/environment/Project3/src/Activity.js":"7","/home/ec2-user/environment/Project3/src/Trip.js":"8","/home/ec2-user/environment/Project3/src/JoinTrip.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/CreateActivity.js":"12","/home/ec2-user/environment/Project3/src/Login.js":"13","/home/ec2-user/environment/Project3/src/api/api.js":"14","/home/ec2-user/environment/Project3/src/refreshToken.js":"15","/home/ec2-user/environment/Project3/src/InputEmails.js":"16"},{"size":500,"mtime":1617893326172,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"18"},{"size":3394,"mtime":1619750267577,"results":"20","hashOfConfig":"18"},{"size":3015,"mtime":1619750921425,"results":"21","hashOfConfig":"18"},{"size":661,"mtime":1619741660226,"results":"22","hashOfConfig":"18"},{"size":1997,"mtime":1619742082559,"results":"23","hashOfConfig":"18"},{"size":2075,"mtime":1619749900127,"results":"24","hashOfConfig":"18"},{"size":3490,"mtime":1619749968278,"results":"25","hashOfConfig":"18"},{"size":1358,"mtime":1619750065721,"results":"26","hashOfConfig":"18"},{"size":4054,"mtime":1619750880879,"results":"27","hashOfConfig":"18"},{"size":696,"mtime":1619613394877,"results":"28","hashOfConfig":"18"},{"size":2416,"mtime":1619749900127,"results":"29","hashOfConfig":"18"},{"size":1418,"mtime":1619613394877,"results":"30","hashOfConfig":"18"},{"size":4391,"mtime":1619749900127,"results":"31","hashOfConfig":"18"},{"size":720,"mtime":1619613394881,"results":"32","hashOfConfig":"18"},{"size":1561,"mtime":1619621524574,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"168wlww",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/ec2-user/environment/Project3/src/index.js",[],["72","73"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["74","75","76","77","78"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport LandingPage from './LandingPage';\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    function createNotification(type, title, message) {\n      switch (type) {\n        case 'info':\n          console.log(type);\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success(message, title, 3000);\n          break;\n        case 'warning':\n          NotificationManager.warning(message, title, 5000);\n          break;\n        case 'error':\n          NotificationManager.error(message, title, 5000);\n          break;\n      }\n    };\n  \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        \n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path =\"/\" render={()=>(<LandingPage/>)}/>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/CreateTrip.js",["79","80","81","82"],"/home/ec2-user/environment/Project3/src/LandingPage.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",["83"],"\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport LandingPage  from './LandingPage';\n\n\nimport {Link} from \"react-router-dom\";\n\nfunction Nav(props) {\n    \n    useEffect(() => {\n    }, [props.isAuth, props.token]);\n    \n    return(\n    <nav className='navbar navbar-expand-md navStyle'>\n       <h1 className='topic'>STIPEND ... <h6 className=\"subheading\"> Trips Made Easier</h6></h1>\n        <button className=\"navbar-toggler\" type=\"button\" \n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\" \n            aria-controls=\"navbarSupportedContent\" \n            aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\">\n         <i className=\"fas fa-align-justify fa-2x\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"nav navbar-nav ml-auto\" >\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/home'><li><button className=\"home\">Home</button></li></Link>\n                )\n                :null}\n            </div>\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/jointrip'><li><button className=\"joinTripbtn\">JoinTrip</button></li></Link>\n                )\n                :null}\n            </div>\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/createtrip'><li><button className=\"createTrip\">CreateTrip</button></li></Link>\n                )\n                :null}\n            </div>\n    \n                { !props.isAuth && <Login login={props.login}/> }\n                { props.isAuth && <Logout logout={props.logout} token={props.token} /> }\n            </ul>\n        </div>\n    </nav>\n    );\n}\n\nexport default Nav;\n\n\n//<button type=\"submit\" onClick={()=>{<Router><Switch><Route path=\"/Activity\" exact component={Test}/></Switch></Router>}}>Activity</button>","/home/ec2-user/environment/Project3/src/Activity.js",["84","85","86","87"],"import Login from './Login.js';\nimport {useState, useEffect} from 'react';\nimport './App.css';\nimport { getActivityApi, setUserPaidApi } from './api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n//import { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\nfunction Activity(props){\n    \n    const [name, setName] = useState(\"\");\n    const [cost, setCost] = useState(\"\");\n    const [owner, setOwner] = useState(false);\n    const [costPerPerson, setCostPerPerson] = useState(\"\");\n    const [participants, setParticipants] = useState([]);\n    \n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n    }\n    \n    function markUserPaid(email){\n      setUserPaidApi(props.token, props.id, email).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n    \n    function configureState(data){\n      console.log(data);\n      setName(data.name);\n      setCost(data.totalCost);      \n      setCostPerPerson(data.costPerPerson);\n      setParticipants(data.participants);\n      setOwner(data.owner);\n    }\n    \n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        getActivityApi(props.token, props.id).then(data => configureState(data));\n    },[props.token, props.refreshState]);\n\n    return (\n      <div className=\"Activity\">\n        <NotificationContainer/>\n            <div className=\"box\">\n              <h3>{name}..</h3><h5> Total cost ${cost} - Cost per person ${costPerPerson}</h5>\n              <p>Participants {participants.map( user => ( <p>{user.firstName} - {user.email} - Paid? {user.paid == 1 ? <b>Yes</b> : <b>No</b>} {owner && user.paid == 0? <div><button onClick={ () => markUserPaid(user.email)}>'Mark as Paid'</button></div> : '' }</p> ) )}</p>\n            </div>\n      </div>\n    );\n}\n\nexport default Activity;\n","/home/ec2-user/environment/Project3/src/Trip.js",["88","89","90","91","92","93","94"],"import React, {useState, useEffect} from 'react';\nimport Activity from './Activity.js'\nimport CreateActivity from './CreateActivity.js'\nimport {useParams} from \"react-router-dom\";\n\nimport LandingPage from './LandingPage';\n\nimport { tripIdApi,userApi,userBalanceApi, setUserPaidApi } from './api/api.js';\n\n\n\nfunction Trip(props)\n{\n     let { tripId } = useParams();\n    const [tripName, setTripName] = useState(\"\");\n    const [tripOwner, setTripOwner] = useState(\"\");\n    const [tripUsers, setTripUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [fullname, setFullname] = useState([]);\n    const [participants,setParticipants] = useState([]);\n    const [activityIds, setActivityIds] = useState([]);\n    const [balance, setBalance] = useState(0);\n\n    //useState with activity id []\n    function configureState(data)\n    {\n        setTripName(data.tripName);\n        setTripOwner(data.tripOwner);\n        setTripUsers(data.participants[0].firstName);\n        let newParticipants = participants;\n        setParticipants(data.participants);\n        setActivityIds(data.activities);\n    }\n    \n    function refresh(){\n        setIsLoading(!isLoading);\n    }\n    \n\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth){\n        tripIdApi(props.token, tripId).then(data => configureState(data));\n        userBalanceApi(props.token, tripId).then(data => setBalance(data.balance));\n      }\n    },[isLoading, props.token, props.isAuth]);\n\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h1>{tripName}!</h1></div>\n             <div><h4>Trip creator: {tripOwner}</h4></div>\n             \n             <div><h6><table><th>Participants on this trip: </th>{participants.map(user => (<tr><td><h6>{user.firstName} - {user.email}</h6></td></tr>))}</table></h6></div>\n             <div class=\"triptext\">\n                <div className=\"smallBox\">Outstanding balance: <b>${balance}</b></div>\n                <CreateActivity createNotif={props.createNotif} token={props.token} trip={tripId} refresh={refresh} />\n                {activityIds.map(activityId => <Activity createNotif={props.createNotif} token={props.token} isAuth={props.isAuth} refresh={refresh} refreshState={isLoading} id={activityId} />)}\n             </div>\n             </div>\n             ):<LandingPage/>}\n        </div>\n        );\n}\nexport default Trip;\n\n\n// useEffect is running infinitely\n    // useEffect(() => {\n    //     async function fetchData() {\n    //         console.log('look')\n    //         setIsLoading(true);\n    //         const fetcher = await tripIdApi(props.token, tripId);\n    //         console.log(\"showing fetcher\",fetcher)\n    //         setTripName(fetcher.tripName)\n    //         setTripOwner(fetcher.tripOwner)\n    //         setFullname([]);\n    //         //setEmails([]);\n    //         fetcher.participants.map((index)=>setEmails(prev=>[...prev,index.email]));\n    //         //fetcher.participants.map((index)=>setFullname(prev=>[...prev,index.firstName+\" \"+index.lastName]));\n    //         setIsLoading(false);\n    //     }\n    //     fetchData();\n    //     //   //If user is logged in and the token ID is valid, update home page\n    //     //   if(props.token !== \"\" && props.isAuth)\n    //     //     tripIdApi(props.token, tripId).then(data => printData(data));\n    // },[props.token]);\n    ","/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["95","96","97"],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/CreateActivity.js",["98","99"],"import Login from './Login.js';\nimport {useState} from 'react';\nimport './App.css';\nimport { createActivityApi } from './api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n//import { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\nfunction CreateActivity(props){\n  \n   // const [inputList, setInputList] = useState([{ activityName: \"\", amount: \"\", participants: \"\"  }]);\n    //const [showbtn, setShowBtn] = useState(true);\n    const [cost, setCost] = useState('');\n    const [name, setName] = useState('');\n    const [emails, setEmails] = useState('');\n    \n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n    }\n    \n    function onSubmit(){\n      let arrayOfEmails = emails.split(',');\n      if(arrayOfEmails[0] == \"\")\n        arrayOfEmails = []\n      createActivityApi(props.token, props.trip, name, cost, arrayOfEmails).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n    \n    return (\n      <div className=\"Activity\">\n        <NotificationContainer/>\n            <div className=\"box\">\n              <h5> Create an activity </h5>\n              <input\n                required\n                type=\"text\"\n                \n                name=\"activityName\"\n                className=\"ml10\"\n                placeholder=\"Enter Activity Name\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n              <input\n                required\n                type=\"text\"\n                name=\"amount\"\n                className=\"ml10\"\n                placeholder=\"Enter Cost\"\n                value={cost}\n                onChange={e => setCost(e.target.value)}\n              />\n              <input\n                required\n                type=\"text\"\n                className=\"ml101\"\n                name=\"participants\"\n                placeholder=\"Participant Email#1, Email#2,..\"\n                value={emails}\n                onChange={e => setEmails(e.target.value)}\n              />\n              <div className=\"btn-box\">\n                <button onClick={onSubmit}>Add</button>\n              </div>\n             \n            </div>\n      </div>\n    );\n}\n\nexport default CreateActivity;\n","/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":12,"column":9,"nodeType":"106","messageId":"107","endLine":12,"endColumn":30},{"ruleId":"104","severity":1,"message":"108","line":15,"column":26,"nodeType":"106","messageId":"107","endLine":15,"endColumn":32},{"ruleId":"104","severity":1,"message":"109","line":21,"column":14,"nodeType":"106","messageId":"107","endLine":21,"endColumn":32},{"ruleId":"110","severity":1,"message":"111","line":22,"column":7,"nodeType":"112","messageId":"113","endLine":36,"endColumn":8},{"ruleId":"114","severity":1,"message":"115","line":51,"column":8,"nodeType":"116","endLine":51,"endColumn":10,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":2,"column":17,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"104","severity":1,"message":"119","line":11,"column":53,"nodeType":"106","messageId":"107","endLine":11,"endColumn":57},{"ruleId":"104","severity":1,"message":"120","line":14,"column":11,"nodeType":"106","messageId":"107","endLine":14,"endColumn":18},{"ruleId":"121","severity":2,"message":"122","line":34,"column":59,"nodeType":"106","messageId":"123","endLine":34,"endColumn":71},{"ruleId":"104","severity":1,"message":"124","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":19},{"ruleId":"104","severity":1,"message":"125","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"114","severity":1,"message":"126","line":42,"column":7,"nodeType":"116","endLine":42,"endColumn":40,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":49,"column":114,"nodeType":"130","messageId":"131","endLine":49,"endColumn":116},{"ruleId":"128","severity":1,"message":"129","line":49,"column":165,"nodeType":"130","messageId":"131","endLine":49,"endColumn":167},{"ruleId":"104","severity":1,"message":"132","line":8,"column":20,"nodeType":"106","messageId":"107","endLine":8,"endColumn":27},{"ruleId":"104","severity":1,"message":"133","line":8,"column":44,"nodeType":"106","messageId":"107","endLine":8,"endColumn":58},{"ruleId":"104","severity":1,"message":"134","line":17,"column":12,"nodeType":"106","messageId":"107","endLine":17,"endColumn":21},{"ruleId":"104","severity":1,"message":"135","line":19,"column":12,"nodeType":"106","messageId":"107","endLine":19,"endColumn":20},{"ruleId":"104","severity":1,"message":"136","line":19,"column":22,"nodeType":"106","messageId":"107","endLine":19,"endColumn":33},{"ruleId":"104","severity":1,"message":"137","line":30,"column":13,"nodeType":"106","messageId":"107","endLine":30,"endColumn":28},{"ruleId":"114","severity":1,"message":"138","line":46,"column":7,"nodeType":"116","endLine":46,"endColumn":45,"suggestions":"139"},{"ruleId":"104","severity":1,"message":"140","line":21,"column":11,"nodeType":"106","messageId":"107","endLine":21,"endColumn":21},{"ruleId":"114","severity":1,"message":"141","line":79,"column":8,"nodeType":"116","endLine":79,"endColumn":46,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":102,"column":17,"nodeType":"145","endLine":102,"endColumn":63},{"ruleId":"104","severity":1,"message":"125","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"129","line":27,"column":27,"nodeType":"130","messageId":"131","endLine":27,"endColumn":29},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'NotificationContainer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'createNotification' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["148"],"'useState' is defined but never used.","'Link' is defined but never used.","'history' is assigned a value but never used.","no-undef","'handleErrors' is not defined.","undef","'LandingPage' is defined but never used.","'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.isAuth'. Either include them or remove the dependency array.",["149"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userApi' is defined but never used.","'setUserPaidApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'fullname' is assigned a value but never used.","'setFullname' is assigned a value but never used.","'newParticipants' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'configureState' and 'tripId'. Either include them or remove the dependency array.",["150"],"'monthNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["151"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"160","text":"161"},"Update the dependencies array to be: [props.token, props.refreshState, props.isAuth, props.id]",{"range":"162","text":"163"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, tripId, configureState]",{"range":"164","text":"165"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, updateData]",{"range":"166","text":"167"},[1773,1775],"[isAuthenticated, tokenId]",[1488,1521],"[props.token, props.refreshState, props.isAuth, props.id]",[1512,1550],"[isLoading, props.token, props.isAuth, tripId, configureState]",[2748,2786],"[isLoading, props.token, props.isAuth, updateData]"]