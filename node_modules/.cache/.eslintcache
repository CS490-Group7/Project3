[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/Nav.js":"4","/home/ec2-user/environment/Project3/src/Activity.js":"5","/home/ec2-user/environment/Project3/src/CreateTrip.js":"6","/home/ec2-user/environment/Project3/src/Trip.js":"7","/home/ec2-user/environment/Project3/src/LandingPage.js":"8","/home/ec2-user/environment/Project3/src/JoinTrip.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/Login.js":"12","/home/ec2-user/environment/Project3/src/CreateActivity.js":"13","/home/ec2-user/environment/Project3/src/api/api.js":"14","/home/ec2-user/environment/Project3/src/InputEmails.js":"15","/home/ec2-user/environment/Project3/src/refreshToken.js":"16"},{"size":500,"mtime":1617932993876,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1617824026869,"results":"19","hashOfConfig":"18"},{"size":3553,"mtime":1619797832966,"results":"20","hashOfConfig":"18"},{"size":2055,"mtime":1619914054331,"results":"21","hashOfConfig":"18"},{"size":2738,"mtime":1619908708105,"results":"22","hashOfConfig":"18"},{"size":3279,"mtime":1619989001905,"results":"23","hashOfConfig":"18"},{"size":2963,"mtime":1619827333313,"results":"24","hashOfConfig":"18"},{"size":3337,"mtime":1619994142485,"results":"25","hashOfConfig":"18"},{"size":1363,"mtime":1619912849554,"results":"26","hashOfConfig":"18"},{"size":3960,"mtime":1619805023009,"results":"27","hashOfConfig":"18"},{"size":696,"mtime":1619556001444,"results":"28","hashOfConfig":"18"},{"size":1418,"mtime":1619556001440,"results":"29","hashOfConfig":"18"},{"size":3402,"mtime":1619988997113,"results":"30","hashOfConfig":"18"},{"size":4879,"mtime":1619908708105,"results":"31","hashOfConfig":"18"},{"size":1458,"mtime":1619913278044,"results":"32","hashOfConfig":"18"},{"size":720,"mtime":1618970963545,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"168wlww",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/home/ec2-user/environment/Project3/src/index.js",[],["72","73"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["74","75","76","77"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\nimport 'react-notifications/lib/notifications.css';\nimport LandingPage from './LandingPage';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    function createNotification(type, title, message) {\n      switch (type) {\n        case 'info':\n          console.log(type);\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success(message, title, 3000);\n          break;\n        case 'warning':\n          NotificationManager.warning(message, title, 5000);\n          break;\n        case 'error':\n          NotificationManager.error(message, title, 5000);\n          break;\n      }\n    };\n  \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/\" render={() => ( <LandingPage/>)}/>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/Nav.js",["78"],"\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport './CreateTrip.css';\nimport './JoinTrips.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport LandingPage  from './LandingPage';\n\n\nimport {Link} from \"react-router-dom\";\n\nfunction Nav(props) {\n    \n    useEffect(() => {\n    }, [props.isAuth, props.token]);\n    \n    return(\n    <nav className='navbar navbar-expand-md navStyle'>\n       <h1 className='topic'>STIPEND ... <h6 className=\"subheading\"> Trips Made Easier</h6></h1>\n        <button className=\"navbar-toggler\" type=\"button\" \n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\" \n            aria-controls=\"navbarSupportedContent\" \n            aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\">\n         <i className=\"fas fa-align-justify fa-2x\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"nav navbar-nav ml-auto\" >\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/home'><li><button className=\"home\">ViewTrips</button></li></Link>\n                )\n                :null}\n            </div>\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/jointrip'><li><button className=\"joinTripbtn\">JoinTrip</button></li></Link>\n                )\n                :null}\n            </div>\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/createtrip'><li><button className=\"createTrip\">CreateTrip</button></li></Link>\n                )\n                :null}\n            </div>\n    \n                { !props.isAuth && <Login login={props.login}/> }\n                { props.isAuth && <Logout logout={props.logout} token={props.token} /> }\n            </ul>\n        </div>\n    </nav>\n    );\n}\n\nexport default Nav;\n\n\n//<button type=\"submit\" onClick={()=>{<Router><Switch><Route path=\"/Activity\" exact component={Test}/></Switch></Router>}}>Activity</button>","/home/ec2-user/environment/Project3/src/Activity.js",["79","80","81","82","83"],"import Login from './Login.js';\nimport {useState, useEffect} from 'react';\nimport './App.css';\nimport { getActivityApi, setUserPaidApi, removeFromActivityApi } from './api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\n\n//import { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\nfunction Activity(props){\n    \n    const [name, setName] = useState(\"\");\n    const [cost, setCost] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [time, setTime] = useState(\"\");\n    const [owner, setOwner] = useState(false);\n    const [costPerPerson, setCostPerPerson] = useState(\"\");\n    const [participants, setParticipants] = useState([]);\n    \n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n    }\n    \n    function markUserPaid(email){\n      setUserPaidApi(props.token, props.id, email).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n    \n    function removeUserFromActivity(email){\n      removeFromActivityApi(props.token, props.id, email).then(data => handleErrors(data)).then(data => props.refresh());\n    }\n    \n    function configureState(data){\n      console.log(data);\n      setName(data.name);\n      setCost(data.totalCost);\n      setCostPerPerson(data.costPerPerson);\n      setDate(data.date);\n      setTime(data.time);\n      setParticipants(data.participants);\n      setOwner(data.owner);\n    }\n    \n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        getActivityApi(props.token, props.id).then(data => configureState(data));\n    },[props.token, props.refreshState]);\n\n    return (\n      <div className=\"Activity\">\n        <NotificationContainer/>\n            <div className=\"box\">\n              <h3>{name}.. </h3><h4>({date} at {time})</h4><h5> Total cost ${cost} - Cost per person ${costPerPerson}</h5>\n              <p>Participants {participants.map( user => ( \n                <p>\n                  {user.firstName} - {user.email} - Paid? {user.paid == 1 ? <b>Yes</b> : <b>No</b>} {owner && user.paid == 0? <div><button onClick={ () => markUserPaid(user.email)}>'Mark as Paid'</button></div> : '' }\n                                                                                                    {owner && user.email != owner.email? <div><button onClick={ () => removeUserFromActivity(user.email)}>'Remove User'</button></div> : '' }\n                </p> \n              ) )}</p>\n            </div>\n      </div>\n    );\n}\n\nexport default Activity;","/home/ec2-user/environment/Project3/src/CreateTrip.js",["84","85","86"],"/home/ec2-user/environment/Project3/src/Trip.js",["87","88","89","90","91","92","93"],"import React, {useState, useEffect } from 'react';\nimport Activity from './Activity.js'\nimport CreateActivity from './CreateActivity.js'\nimport {useParams, useHistory} from \"react-router-dom\";\nimport { tripIdApi,userApi,userBalanceApi, setUserPaidApi } from './api/api.js';\nimport LandingPage from \"./LandingPage\";\nimport './App.css';\n\n\n\nfunction Trip(props)\n{\n    let { tripId } = useParams();\n    const history = useHistory();\n    const [tripName, setTripName] = useState(\"\");\n    const [joinCode,setJointCode]=useState(\"\");\n    const [tripOwner, setTripOwner] = useState(\"\");\n    const [tripUsers, setTripUsers] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [fullname, setFullname] = useState([]);\n    const [participants,setParticipants] = useState([]);\n    const [activityIds, setActivityIds] = useState([]);\n    const [balance, setBalance] = useState(0);\n    \n\n    function handleErrors(data){\n      if(data.success === false){\n        // Redirect user to homepage if they try to access a trip they aren't a part of\n        history.push('/home');\n      }\n      else if(data.success === true){\n        configureState(data);\n      }\n    }\n    \n    function configureState(data)\n    {\n        setTripName(data.tripName);\n        setTripOwner(data.tripOwner);\n        setTripUsers(data.participants[0].firstName);\n        let newParticipants = participants;\n        setParticipants(data.participants);\n        setActivityIds(data.activities);\n        setJointCode(data.joinCode);\n    }\n    \n    function refresh(){\n        setIsLoading(!isLoading);\n    }\n\n\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth){\n        tripIdApi(props.token, tripId).then(data => handleErrors(data));\n        userBalanceApi(props.token, tripId).then(data => setBalance(data.balance));\n      }\n    },[isLoading, props.token, props.isAuth]);\n\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h1>{tripName}!</h1></div>\n             <div><h4>Trip creator: {tripOwner}</h4></div>\n             <div><p className=\"join\">Join Code: {joinCode}</p></div>\n             <div><h6><table><th>Participants on this trip: </th>{participants.map(user => (<tr><td><h6>{user.firstName} - {user.email}</h6></td></tr>))}</table></h6></div>\n             <div class=\"triptext\">\n                <div className=\"smallBox\">Outstanding balance: <b>${balance}</b></div>\n                <CreateActivity createNotif={props.createNotif} token={props.token} trip={tripId} refresh={refresh} />\n                {activityIds.map(activityId => <Activity createNotif={props.createNotif} token={props.token} isAuth={props.isAuth} refresh={refresh} refreshState={isLoading} id={activityId} />)}\n             </div>\n \n             </div>\n             ):<LandingPage/>}\n        </div>\n        );\n}\nexport default Trip;","/home/ec2-user/environment/Project3/src/LandingPage.js",["94"],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["95","96","97"],"import { useState, useEffect } from 'react';\n// import Login from'../Login.js';\n// import Logout from'../Logout.js';\n//import {loginApi, userApi} from '../api/api.js';\nimport { userApi,deleteTripIdApi} from '../api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport LandingPage from \"../LandingPage\";\n\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    const [hide, setHide]=useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    \n    function randomImages(){\n      var images = [\"https://i.stack.imgur.com/CJT47.jpg\",\"https://www.freegreatpicture.com/files/85/2994-man-and-nature.jpg\"\n                    ,\"https://www.freegreatpicture.com/files/31/10971-world-scenery.jpg\"\n                    ,\"https://media.cntraveler.com/photos/5949abf42bd0d42819c6065e/master/pass/Big-Bend-GettyImages-516259396.jpg\"\n                    ,\"https://media.timeout.com/images/105685502/image.jpg\"];\n     var randomImage = images[Math.floor(Math.random()*images.length)];\n      return randomImage;\n    }\n    \n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n      setIsLoading(!isLoading);\n    }\n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success === false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n          //console.log(data.trips);\n        }\n      }\n    }\n    \n    function deleteTrip(trip_id)\n    {\n      if(props.token !== \"\")\n        deleteTripIdApi(props.token, trip_id).then(data => handleErrors(data));\n    }\n    \n\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [isLoading, props.token, props.isAuth]);\n  // <button className=\"tripsButton\">{trip.name} </button>\n  \n  if(isViewable){\n    return (\n      <div className=\"homePage\">\n      \n      <NotificationContainer/>\n        <h2>Hello, {firstName}!</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n\n        <div>\n          <button className=\"hideButton\" onClick={()=>{setHide(!hide)}} >Show / Hide Trips<br /></button>\n        </div>\n        {trips.map((trip, index) => {\n        return (\n        <div>\n        {!hide ? (\n        <div className=\"container\">\n        \n            <div className=\"col\">\n              <a href={`/#/trip/${trip.trip_id}`}>\n                <img className=\"images\" src={randomImages()}/>\n                <span className=\"align-middle\">{trip.name} - {trip.startDate} to {trip.endDate}</span>\n                <div>\n                  \n                </div>\n              </a>\n              <button type=\"submit\" onClick={()=>deleteTrip(trip.trip_id)}>Delete</button>\n              </div>\n            </div>\n       \n          ):null}\n        </div>\n        \n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<LandingPage/>\n    );\n  }\n}\n\nexport default HomePage;","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/CreateActivity.js",["98"],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":13,"column":9,"nodeType":"105","messageId":"106","endLine":13,"endColumn":30},{"ruleId":"103","severity":1,"message":"107","line":16,"column":26,"nodeType":"105","messageId":"106","endLine":16,"endColumn":32},{"ruleId":"108","severity":1,"message":"109","line":23,"column":7,"nodeType":"110","messageId":"111","endLine":37,"endColumn":8},{"ruleId":"112","severity":1,"message":"113","line":52,"column":8,"nodeType":"114","endLine":52,"endColumn":10,"suggestions":"115"},{"ruleId":"103","severity":1,"message":"116","line":8,"column":8,"nodeType":"105","messageId":"106","endLine":8,"endColumn":19},{"ruleId":"103","severity":1,"message":"117","line":1,"column":8,"nodeType":"105","messageId":"106","endLine":1,"endColumn":13},{"ruleId":"112","severity":1,"message":"118","line":50,"column":7,"nodeType":"114","endLine":50,"endColumn":40,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":59,"column":70,"nodeType":"122","messageId":"123","endLine":59,"endColumn":72},{"ruleId":"120","severity":1,"message":"121","line":59,"column":121,"nodeType":"122","messageId":"123","endLine":59,"endColumn":123},{"ruleId":"120","severity":1,"message":"124","line":60,"column":122,"nodeType":"122","messageId":"123","endLine":60,"endColumn":124},{"ruleId":"103","severity":1,"message":"125","line":2,"column":17,"nodeType":"105","messageId":"106","endLine":2,"endColumn":25},{"ruleId":"103","severity":1,"message":"104","line":4,"column":9,"nodeType":"105","messageId":"106","endLine":4,"endColumn":30},{"ruleId":"103","severity":1,"message":"126","line":8,"column":53,"nodeType":"105","messageId":"106","endLine":8,"endColumn":57},{"ruleId":"103","severity":1,"message":"127","line":5,"column":20,"nodeType":"105","messageId":"106","endLine":5,"endColumn":27},{"ruleId":"103","severity":1,"message":"128","line":5,"column":44,"nodeType":"105","messageId":"106","endLine":5,"endColumn":58},{"ruleId":"103","severity":1,"message":"129","line":18,"column":12,"nodeType":"105","messageId":"106","endLine":18,"endColumn":21},{"ruleId":"103","severity":1,"message":"130","line":20,"column":12,"nodeType":"105","messageId":"106","endLine":20,"endColumn":20},{"ruleId":"103","severity":1,"message":"131","line":20,"column":22,"nodeType":"105","messageId":"106","endLine":20,"endColumn":33},{"ruleId":"103","severity":1,"message":"132","line":41,"column":13,"nodeType":"105","messageId":"106","endLine":41,"endColumn":28},{"ruleId":"112","severity":1,"message":"133","line":58,"column":7,"nodeType":"114","endLine":58,"endColumn":45,"suggestions":"134"},{"ruleId":"103","severity":1,"message":"117","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":13},{"ruleId":"103","severity":1,"message":"135","line":18,"column":11,"nodeType":"105","messageId":"106","endLine":18,"endColumn":21},{"ruleId":"112","severity":1,"message":"136","line":76,"column":8,"nodeType":"114","endLine":76,"endColumn":46,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":99,"column":17,"nodeType":"140","endLine":99,"endColumn":63},{"ruleId":"120","severity":1,"message":"121","line":29,"column":27,"nodeType":"122","messageId":"123","endLine":29,"endColumn":29},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'NotificationContainer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["143"],"'LandingPage' is defined but never used.","'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.isAuth'. Either include them or remove the dependency array.",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'Link' is defined but never used.","'userApi' is defined but never used.","'setUserPaidApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'fullname' is assigned a value but never used.","'setFullname' is assigned a value but never used.","'newParticipants' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleErrors' and 'tripId'. Either include them or remove the dependency array.",["145"],"'monthNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["146"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"155","text":"156"},"Update the dependencies array to be: [props.token, props.refreshState, props.isAuth, props.id]",{"range":"157","text":"158"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, tripId, handleErrors]",{"range":"159","text":"160"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, updateData]",{"range":"161","text":"162"},[1774,1776],"[isAuthenticated, tokenId]",[1818,1851],"[props.token, props.refreshState, props.isAuth, props.id]",[1906,1944],"[isLoading, props.token, props.isAuth, tripId, handleErrors]",[2745,2783],"[isLoading, props.token, props.isAuth, updateData]"]