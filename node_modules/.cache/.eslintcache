[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/Nav.js":"5","/home/ec2-user/environment/Project3/src/JoinTrip.js":"6","/home/ec2-user/environment/Project3/src/TripHome.js":"7","/home/ec2-user/environment/Project3/src/components/HomePage.js":"8","/home/ec2-user/environment/Project3/src/CreateTrip.js":"9","/home/ec2-user/environment/Project3/src/Login.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/refreshToken.js":"13","/home/ec2-user/environment/Project3/src/InputEmails.js":"14","/home/ec2-user/environment/Project3/src/Trip.js":"15"},{"size":500,"mtime":1617893326172,"results":"16","hashOfConfig":"17"},{"size":2631,"mtime":1618982306366,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"17"},{"size":707,"mtime":1618982306362,"results":"20","hashOfConfig":"17"},{"size":1643,"mtime":1618982306370,"results":"21","hashOfConfig":"17"},{"size":797,"mtime":1618982306370,"results":"22","hashOfConfig":"17"},{"size":441,"mtime":1618857780453,"results":"23","hashOfConfig":"17"},{"size":2206,"mtime":1619012649826,"results":"24","hashOfConfig":"17"},{"size":3723,"mtime":1618982306366,"results":"25","hashOfConfig":"17"},{"size":1429,"mtime":1618982306370,"results":"26","hashOfConfig":"17"},{"size":694,"mtime":1618982306370,"results":"27","hashOfConfig":"17"},{"size":2432,"mtime":1618982306378,"results":"28","hashOfConfig":"17"},{"size":720,"mtime":1618982306378,"results":"29","hashOfConfig":"17"},{"size":1538,"mtime":1618982306366,"results":"30","hashOfConfig":"17"},{"size":1535,"mtime":1618982655500,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"168wlww",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"/home/ec2-user/environment/Project3/src/index.js",[],["68","69"],"/home/ec2-user/environment/Project3/src/App.js",["70","71"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/TripHome.js",["72"],"  \nimport React from 'react';\nimport Login from './Login.js';\nfunction TripHome(props)\n{console.log(props.name)\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your TripHome!</h3></div>\n             <div><button>Click</button></div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default TripHome;",["73","74"],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["75"],"/home/ec2-user/environment/Project3/src/CreateTrip.js",["76","77"],"import Trip from './Trip';\nimport React, { useState } from 'react';\n\n\nimport { createTripApi, inviteToTripApi } from './api/api.js';\n\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport { getInvitedEmails, InputEmails } from './InputEmails';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n    const history = useHistory();\n    //const user = useState('');\n    const { register, handleSubmit } = useForm();\n\n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      console.log(data);\n      // doesnt redirect till all fields are filled up\n      if(props.token !== \"\"){\n            createTripApi(props.token, data).then(data => history.push('/trip/' + data.tripId));\n      }\n      const emails = getInvitedEmails().map(email => email['value'])\n      console.log(emails);\n      if(emails !== []){\n          inviteToTripApi(props.token, emails, data['join_code'])\n      }\n    }\n\n    return(\n        <div className=\"activity\">\n            {props.isAuth?(\n            <div>\n                <h3>Welcome to your Create Trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                        <div><label for=\"Name\" className=\"labels\">Trip Name:</label>\n                        <input required type=\"text\" id=\"Name\" className=\"createTripInputs\" placeholder=\"Trip Name*\" {...register(\"trip_name\", {required: true, maxLength: 17})} /></div>\n\n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"tripStart\" className=\"labels\">Trip's Start Date:</label>\n                        <input required type=\"date\" id=\"tripStart\" className=\"createTripInputs\" placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label for=\"tripEnd\" className=\"labels\">Trip's End Date:</label>\n                        <input required type=\"date\" id=\"tripEnd\" className=\"createTripInputs\" placeholder=\"End Date\" {...register(\"End Date\", {required: true})}/></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n                        \n                        <div><label className=\"labels\">Enter Participant's Gmail Accounts: </label>\n                        <InputEmails/></div>\n                        \n                        <div className=\"lines\">____________________________________________________________________________________</div>\n\n                        <div><label for=\"JoinCode\" className=\"labels\">Create Join Code:</label></div>\n                        <div><input required type=\"text\" id=\"JoinCode\" className=\"createTripInputs\" placeholder=\"Join Code\" pattern=\"^[a-zA-Z0-9]*$\" maxLength=\"7\" {...register(\"join_code\", {required: true, maxLength: 7})} /></div>\n\n                        <div className=\"lines\">____________________________________________________________________________________</div>\n\n                        <div><button type=\"submit\">Submit</button></div>\n                </form>\n            </div>)\n            :null}\n\n            <Router>\n                <div>\n                    <Route path=\"/trip\" component={Trip}/>\n                </div>\n            </Router>\n\n                \n        </div>\n        );\n}\n\nexport default CreateTrip;\n","/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/Trip.js",["78"],"\nimport React, {useState, useEffect} from 'react';\n\n\n//import ReactDOM from \"react-dom\";\n\nimport {\n  useParams\n} from \"react-router-dom\";\nimport { tripIdApi,userApi } from './api/api.js';\n\nfunction Trip(props)\n{\n     let { tripId } = useParams();\n     \n    const [tripName, setTripName] = useState(\"\");\n    const [tripOwner, setTripOwner] = useState(\"\");\n    const [tripUsers, setTripUsers] = useState([]);\n\n    function printData(data)\n    {\n        console.log(data)\n        setTripName(data.tripName)\n        setTripOwner(data.tripOwner)\n        setTripUsers(data.participants[0].firstName)\n    }\n    // Load all trip data\n    // useEffect(() => {\n    //   if(props.isAuth && props.token !== \"\"){\n    //     tripIdApi(props.token, tripId).then(data => console.log('Received data: ', data));\n        \n    //   }\n    // });\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        tripIdApi(props.token, tripId).then(data => printData(data));\n  \n    });\n    \n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your trip!</h3></div>\n             <div class=\"triptext\">\n                <p>The trip name is : {tripName}</p>\n                <p>Trip owner is : {tripOwner}</p>\n                <p>Trip user is : {tripUsers}</p>\n             </div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default Trip;",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":13,"column":26,"nodeType":"85","messageId":"86","endLine":13,"endColumn":32},{"ruleId":"87","severity":1,"message":"88","line":31,"column":8,"nodeType":"89","endLine":31,"endColumn":10,"suggestions":"90"},{"ruleId":"83","severity":1,"message":"91","line":3,"column":8,"nodeType":"85","messageId":"86","endLine":3,"endColumn":13},{"ruleId":"79","replacedBy":"92"},{"ruleId":"81","replacedBy":"93"},{"ruleId":"87","severity":1,"message":"94","line":45,"column":8,"nodeType":"89","endLine":45,"endColumn":35,"suggestions":"95"},{"ruleId":"83","severity":1,"message":"96","line":2,"column":17,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"97","line":10,"column":53,"nodeType":"85","messageId":"86","endLine":10,"endColumn":57},{"ruleId":"83","severity":1,"message":"98","line":10,"column":20,"nodeType":"85","messageId":"86","endLine":10,"endColumn":27},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'Login' is defined but never used.",["99"],["100"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["102"],"'useState' is defined but never used.","'Link' is defined but never used.","'userApi' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"107","text":"108"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"109","text":"110"},[1084,1086],"[isAuthenticated, tokenId]",[1440,1467],"[props.token, props.isAuth, updateData]"]