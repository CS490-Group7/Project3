[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/Nav.js":"5","/home/ec2-user/environment/Project3/src/JoinTrip.js":"6","/home/ec2-user/environment/Project3/src/TripHome.js":"7","/home/ec2-user/environment/Project3/src/components/HomePage.js":"8","/home/ec2-user/environment/Project3/src/CreateTrip.js":"9","/home/ec2-user/environment/Project3/src/Login.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/refreshToken.js":"13","/home/ec2-user/environment/Project3/src/InputEmails.js":"14","/home/ec2-user/environment/Project3/src/Trip.js":"15"},{"size":500,"mtime":1617893326172,"results":"16","hashOfConfig":"17"},{"size":2631,"mtime":1618982306366,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"17"},{"size":2517,"mtime":1619487554468,"results":"20","hashOfConfig":"17"},{"size":1955,"mtime":1619487344696,"results":"21","hashOfConfig":"17"},{"size":905,"mtime":1619487344696,"results":"22","hashOfConfig":"17"},{"size":441,"mtime":1618857780453,"results":"23","hashOfConfig":"17"},{"size":3053,"mtime":1619487344700,"results":"24","hashOfConfig":"17"},{"size":3057,"mtime":1619487344696,"results":"25","hashOfConfig":"17"},{"size":1452,"mtime":1619487712013,"results":"26","hashOfConfig":"17"},{"size":696,"mtime":1619487925169,"results":"27","hashOfConfig":"17"},{"size":2728,"mtime":1619461650633,"results":"28","hashOfConfig":"17"},{"size":720,"mtime":1618982306378,"results":"29","hashOfConfig":"17"},{"size":1558,"mtime":1619487344696,"results":"30","hashOfConfig":"17"},{"size":2193,"mtime":1619487344700,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"168wlww",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ec2-user/environment/Project3/src/index.js",[],["67","68"],"/home/ec2-user/environment/Project3/src/App.js",["69","70"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",["71"],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/TripHome.js",["72"],"  \nimport React from 'react';\nimport Login from './Login.js';\nfunction TripHome(props)\n{console.log(props.name)\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your TripHome!</h3></div>\n             <div><button>Click</button></div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default TripHome;",["73","74"],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["75","76"],"/home/ec2-user/environment/Project3/src/CreateTrip.js",["77","78"],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",["79"],"const fetch = require(\"node-fetch\");\n\nconst loginApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst logoutApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/logout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst userApi = (tokenId) => {\n    return fetch('/api/user', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\nconst createTripApi = (tokenId, tripData) => {\n    const data = {'trip_data': tripData};\n    return fetch('/api/createTrip', {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst inviteToTripApi = (tokenId, emails, joinCode) => {\n    const data = {'invited_emails': emails,\n                  'join_code': joinCode};\n    return fetch('/api/trips/invite', {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst joinTripApi = (tokenId, joinCode) => {\n    const data = {'join_code': joinCode};\n    return fetch('/api/joinTrip', {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst tripIdApi = (tokenId, tripId) => {\n    return fetch('/api/trip?tripId=' + tripId, {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\nconst deleteTripIdApi = (tokenId, tripId) => {\n    return fetch('/api/trip?deletetripId=' + tripId, {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\nexport {\n    loginApi,\n    logoutApi,\n    createTripApi,\n    inviteToTripApi,\n    joinTripApi,\n    tripIdApi,\n    userApi\n};","/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/Trip.js",["80","81","82","83","84","85"],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":13,"column":26,"nodeType":"92","messageId":"93","endLine":13,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":31,"column":8,"nodeType":"96","endLine":31,"endColumn":10,"suggestions":"97"},{"ruleId":"90","severity":1,"message":"98","line":1,"column":8,"nodeType":"92","messageId":"93","endLine":1,"endColumn":13},{"ruleId":"90","severity":1,"message":"98","line":3,"column":8,"nodeType":"92","messageId":"93","endLine":3,"endColumn":13},{"ruleId":"86","replacedBy":"99"},{"ruleId":"88","replacedBy":"100"},{"ruleId":"94","severity":1,"message":"101","line":55,"column":8,"nodeType":"96","endLine":55,"endColumn":35,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":73,"column":15,"nodeType":"105","endLine":73,"endColumn":61},{"ruleId":"90","severity":1,"message":"106","line":2,"column":17,"nodeType":"92","messageId":"93","endLine":2,"endColumn":25},{"ruleId":"90","severity":1,"message":"107","line":10,"column":53,"nodeType":"92","messageId":"93","endLine":10,"endColumn":57},{"ruleId":"90","severity":1,"message":"108","line":81,"column":7,"nodeType":"92","messageId":"93","endLine":81,"endColumn":22},{"ruleId":"90","severity":1,"message":"109","line":4,"column":20,"nodeType":"92","messageId":"93","endLine":4,"endColumn":27},{"ruleId":"90","severity":1,"message":"110","line":12,"column":12,"nodeType":"92","messageId":"93","endLine":12,"endColumn":21},{"ruleId":"90","severity":1,"message":"111","line":13,"column":13,"nodeType":"92","messageId":"93","endLine":13,"endColumn":22},{"ruleId":"90","severity":1,"message":"112","line":15,"column":12,"nodeType":"92","messageId":"93","endLine":15,"endColumn":18},{"ruleId":"90","severity":1,"message":"113","line":17,"column":14,"nodeType":"92","messageId":"93","endLine":17,"endColumn":23},{"ruleId":"94","severity":1,"message":"114","line":44,"column":7,"nodeType":"96","endLine":44,"endColumn":20,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'Login' is defined but never used.",["116"],["117"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["119"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Link' is defined but never used.","'deleteTripIdApi' is assigned a value but never used.","'userApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'emails' is assigned a value but never used.","'printData' is defined but never used.","React Hook useEffect has a missing dependency: 'tripId'. Either include it or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"127","text":"128"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"129","text":"130"},"Update the dependencies array to be: [props.token, tripId]",{"range":"131","text":"132"},[1084,1086],"[isAuthenticated, tokenId]",[2007,2034],"[props.token, props.isAuth, updateData]",[1641,1654],"[props.token, tripId]"]