[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/CreateTrip.js":"4","/home/ec2-user/environment/Project3/src/LandingPage.js":"5","/home/ec2-user/environment/Project3/src/Nav.js":"6","/home/ec2-user/environment/Project3/src/Activity.js":"7","/home/ec2-user/environment/Project3/src/Trip.js":"8","/home/ec2-user/environment/Project3/src/JoinTrip.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/CreateActivity.js":"12","/home/ec2-user/environment/Project3/src/Login.js":"13","/home/ec2-user/environment/Project3/src/api/api.js":"14","/home/ec2-user/environment/Project3/src/refreshToken.js":"15","/home/ec2-user/environment/Project3/src/InputEmails.js":"16"},{"size":500,"mtime":1617893326172,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"18"},{"size":3553,"mtime":1619755124414,"results":"20","hashOfConfig":"18"},{"size":3272,"mtime":1619755132894,"results":"21","hashOfConfig":"18"},{"size":3349,"mtime":1619799430145,"results":"22","hashOfConfig":"18"},{"size":1997,"mtime":1619742082559,"results":"23","hashOfConfig":"18"},{"size":2290,"mtime":1619804800506,"results":"24","hashOfConfig":"18"},{"size":2798,"mtime":1619809250847,"results":"25","hashOfConfig":"18"},{"size":1358,"mtime":1619750065721,"results":"26","hashOfConfig":"18"},{"size":3961,"mtime":1619753984537,"results":"27","hashOfConfig":"18"},{"size":696,"mtime":1619613394877,"results":"28","hashOfConfig":"18"},{"size":3480,"mtime":1619809071833,"results":"29","hashOfConfig":"18"},{"size":1418,"mtime":1619613394877,"results":"30","hashOfConfig":"18"},{"size":4432,"mtime":1619753038699,"results":"31","hashOfConfig":"18"},{"size":720,"mtime":1619613394881,"results":"32","hashOfConfig":"18"},{"size":1562,"mtime":1619808204086,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"168wlww",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/Project3/src/index.js",[],["71","72"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["73","74","75","76"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\nimport 'react-notifications/lib/notifications.css';\nimport LandingPage from './LandingPage';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    function createNotification(type, title, message) {\n      switch (type) {\n        case 'info':\n          console.log(type);\n          NotificationManager.info('Info message');\n          break;\n        case 'success':\n          NotificationManager.success(message, title, 3000);\n          break;\n        case 'warning':\n          NotificationManager.warning(message, title, 5000);\n          break;\n        case 'error':\n          NotificationManager.error(message, title, 5000);\n          break;\n      }\n    };\n  \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/\" render={() => ( <LandingPage/>)}/>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip createNotif={createNotification} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/CreateTrip.js",["77","78","79"],"import Trip from './Trip';\nimport React, { useState } from 'react';\nimport { createTripApi, inviteToTripApi } from './api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport 'react-notifications/lib/notifications.css';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport { getInvitedEmails, InputEmails } from './InputEmails';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\nimport LandingPage from \"./LandingPage\";\n\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n    const history = useHistory();\n    //const user = useState('');\n    const { register, handleSubmit } = useForm();\n    \n    var code = \"\";\n    function joinCode() {\n      \n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    \n      for (var i = 0; i < 7; i++)\n        code += possible.charAt(Math.floor(Math.random() * possible.length));\n      return code;\n    }\n    \n\n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else\n          history.push('/trip/' + data.tripId);\n    }\n    \n // const onSubmit = data => console.log(data);\n    function onSubmit(data){\n        data.join_code=joinCode();\n        if(props.token !== \"\"){\n            createTripApi(props.token, data).then(data => handleErrors(data));\n        }\n        const emails = getInvitedEmails().map(email => email['value'])\n        if(emails !== [])\n            inviteToTripApi(props.token, emails, data['join_code']);\n    }\n    \n// sample Trip1- code: uw1YGGD\n    return(\n        <div className=\"activity\">\n            {props.isAuth?(\n            <div>\n                <h3 className=\"headingClass\">Create a new trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                        <div><label for=\"Name\" className=\"labels\"> Enter Trip name :</label>\n                        <input required type=\"text\" id=\"Name\" className=\"createTripInputs1\" placeholder=\"eg., Vegas\" {...register(\"trip_name\", {required: true, maxLength: 17})} /></div>\n                        \n                        <div><label for=\"tripStart\" className=\"labels\">Trip's Start Date:</label>\n                        <input required type=\"date\" id=\"tripStart\" className=\"createTripInputs\" placeholder=\"Start Date\" {...register(\"start_date\", {required: true})} /></div>\n                      \n                        <div><label for=\"tripEnd\" className=\"labels\"> Trip's End Date :</label>\n                        <input required type=\"date\" id=\"tripEnd\" className=\"createTripInputs\" placeholder=\"End Date\" {...register(\"end_date\", {required: true})}/></div>\n                       \n                        <div><label className=\"labels\">Invite Participants: </label>\n                        <InputEmails/></div>\n                        <hr/>\n                        <div><button type=\"submit\" className=\"tripSubmit\">Create Trip</button></div>\n                </form>\n            </div>)\n            :<LandingPage/>}\n\n            <Router>\n                <div>\n                    <Route path=\"/trip\" component={Trip}/>\n                </div>\n            </Router>\n\n                \n        </div>\n        );\n}\n\nexport default CreateTrip;","/home/ec2-user/environment/Project3/src/LandingPage.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",["80"],"\nimport React, {useEffect} from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport LandingPage  from './LandingPage';\n\n\nimport {Link} from \"react-router-dom\";\n\nfunction Nav(props) {\n    \n    useEffect(() => {\n    }, [props.isAuth, props.token]);\n    \n    return(\n    <nav className='navbar navbar-expand-md navStyle'>\n       <h1 className='topic'>STIPEND ... <h6 className=\"subheading\"> Trips Made Easier</h6></h1>\n        <button className=\"navbar-toggler\" type=\"button\" \n            data-toggle=\"collapse\"\n            data-target=\"#navbarSupportedContent\" \n            aria-controls=\"navbarSupportedContent\" \n            aria-expanded=\"false\" \n            aria-label=\"Toggle navigation\">\n         <i className=\"fas fa-align-justify fa-2x\" />\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"nav navbar-nav ml-auto\" >\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/home'><li><button className=\"home\">Home</button></li></Link>\n                )\n                :null}\n            </div>\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/jointrip'><li><button className=\"joinTripbtn\">JoinTrip</button></li></Link>\n                )\n                :null}\n            </div>\n            <div>\n                {props.isAuth?\n                (\n                <Link to='/createtrip'><li><button className=\"createTrip\">CreateTrip</button></li></Link>\n                )\n                :null}\n            </div>\n    \n                { !props.isAuth && <Login login={props.login}/> }\n                { props.isAuth && <Logout logout={props.logout} token={props.token} /> }\n            </ul>\n        </div>\n    </nav>\n    );\n}\n\nexport default Nav;\n\n\n//<button type=\"submit\" onClick={()=>{<Router><Switch><Route path=\"/Activity\" exact component={Test}/></Switch></Router>}}>Activity</button>","/home/ec2-user/environment/Project3/src/Activity.js",["81","82","83","84"],"/home/ec2-user/environment/Project3/src/Trip.js",["85","86","87","88","89","90","91"],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["92","93","94"],"import { useState, useEffect } from 'react';\n// import Login from'../Login.js';\n// import Logout from'../Logout.js';\n//import {loginApi, userApi} from '../api/api.js';\nimport { userApi,deleteTripIdApi} from '../api/api.js';\nimport {NotificationContainer} from 'react-notifications';\nimport LandingPage from \"../LandingPage\";\n\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    const [hide, setHide]=useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n    \n    function randomImages(){\n      var images = [\"https://i.stack.imgur.com/CJT47.jpg\",\"https://www.freegreatpicture.com/files/85/2994-man-and-nature.jpg\"\n                    ,\"https://www.freegreatpicture.com/files/31/10971-world-scenery.jpg\"\n                    ,\"https://media.cntraveler.com/photos/5949abf42bd0d42819c6065e/master/pass/Big-Bend-GettyImages-516259396.jpg\"\n                    ,\"https://media.timeout.com/images/105685502/image.jpg\"];\n     var randomImage = images[Math.floor(Math.random()*images.length)];\n      return randomImage;\n    }\n    \n    function handleErrors(data){\n      if(data.success === false)\n        props.createNotif('error', data.message);\n      else if(data.success === true)\n        props.createNotif('success', data.message);\n      setIsLoading(!isLoading);\n    }\n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success === false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n          //console.log(data.trips);\n        }\n      }\n    }\n    \n    function deleteTrip(trip_id)\n    {\n      if(props.token !== \"\")\n        deleteTripIdApi(props.token, trip_id).then(data => handleErrors(data));\n    }\n    \n\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [isLoading, props.token, props.isAuth]);\n  // <button className=\"tripsButton\">{trip.name} </button>\n  \n  if(isViewable){\n    return (\n      <div className=\"homePage\">\n      \n      <NotificationContainer/>\n        <h2>Hello, {firstName}!</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n\n        <div>\n          <button className=\"hideButton\" onClick={()=>{setHide(!hide)}} >Show / Hide Trips<br /></button>\n        </div>\n        {trips.map((trip, index) => {\n        return (\n        <div>\n        {!hide ? (\n        <div className=\"container\">\n        \n            <div className=\"col\">\n              <a href={`/#/trip/${trip.trip_id}`}>\n                <img className=\"images\" src={randomImages()}/>\n                <span className=\"align-middle\">{trip.name} - {trip.startDate} to {trip.endDate}</span>\n                <div>\n                  \n                </div>\n              </a>\n              <button type=\"submit\" onClick={()=>deleteTrip(trip.trip_id)}>Delete</button>\n              </div>\n            </div>\n       \n          ):null}\n        </div>\n        \n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<LandingPage/>\n    );\n  }\n}\n\nexport default HomePage;\n","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/CreateActivity.js",["95","96"],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":13,"column":9,"nodeType":"103","messageId":"104","endLine":13,"endColumn":30},{"ruleId":"101","severity":1,"message":"105","line":16,"column":26,"nodeType":"103","messageId":"104","endLine":16,"endColumn":32},{"ruleId":"106","severity":1,"message":"107","line":23,"column":7,"nodeType":"108","messageId":"109","endLine":37,"endColumn":8},{"ruleId":"110","severity":1,"message":"111","line":52,"column":8,"nodeType":"112","endLine":52,"endColumn":10,"suggestions":"113"},{"ruleId":"101","severity":1,"message":"114","line":2,"column":17,"nodeType":"103","messageId":"104","endLine":2,"endColumn":25},{"ruleId":"101","severity":1,"message":"102","line":4,"column":9,"nodeType":"103","messageId":"104","endLine":4,"endColumn":30},{"ruleId":"101","severity":1,"message":"115","line":9,"column":53,"nodeType":"103","messageId":"104","endLine":9,"endColumn":57},{"ruleId":"101","severity":1,"message":"116","line":6,"column":8,"nodeType":"103","messageId":"104","endLine":6,"endColumn":19},{"ruleId":"101","severity":1,"message":"117","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"110","severity":1,"message":"118","line":46,"column":7,"nodeType":"112","endLine":46,"endColumn":40,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":56,"column":116,"nodeType":"122","messageId":"123","endLine":56,"endColumn":118},{"ruleId":"120","severity":1,"message":"121","line":56,"column":167,"nodeType":"122","messageId":"123","endLine":56,"endColumn":169},{"ruleId":"101","severity":1,"message":"124","line":5,"column":20,"nodeType":"103","messageId":"104","endLine":5,"endColumn":27},{"ruleId":"101","severity":1,"message":"125","line":5,"column":44,"nodeType":"103","messageId":"104","endLine":5,"endColumn":58},{"ruleId":"101","severity":1,"message":"126","line":15,"column":12,"nodeType":"103","messageId":"104","endLine":15,"endColumn":21},{"ruleId":"101","severity":1,"message":"127","line":17,"column":12,"nodeType":"103","messageId":"104","endLine":17,"endColumn":20},{"ruleId":"101","severity":1,"message":"128","line":17,"column":22,"nodeType":"103","messageId":"104","endLine":17,"endColumn":33},{"ruleId":"101","severity":1,"message":"129","line":37,"column":13,"nodeType":"103","messageId":"104","endLine":37,"endColumn":28},{"ruleId":"110","severity":1,"message":"130","line":53,"column":7,"nodeType":"112","endLine":53,"endColumn":45,"suggestions":"131"},{"ruleId":"101","severity":1,"message":"132","line":18,"column":11,"nodeType":"103","messageId":"104","endLine":18,"endColumn":21},{"ruleId":"110","severity":1,"message":"133","line":76,"column":8,"nodeType":"112","endLine":76,"endColumn":46,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":99,"column":17,"nodeType":"137","endLine":99,"endColumn":63},{"ruleId":"101","severity":1,"message":"117","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"121","line":33,"column":27,"nodeType":"122","messageId":"123","endLine":33,"endColumn":29},"no-native-reassign",["138"],"no-negated-in-lhs",["139"],"no-unused-vars","'NotificationContainer' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["140"],"'useState' is defined but never used.","'Link' is defined but never used.","'LandingPage' is defined but never used.","'Login' is defined but never used.","React Hook useEffect has missing dependencies: 'props.id' and 'props.isAuth'. Either include them or remove the dependency array.",["141"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userApi' is defined but never used.","'setUserPaidApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'fullname' is assigned a value but never used.","'setFullname' is assigned a value but never used.","'newParticipants' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleErrors' and 'tripId'. Either include them or remove the dependency array.",["142"],"'monthNames' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"152","text":"153"},"Update the dependencies array to be: [props.token, props.refreshState, props.isAuth, props.id]",{"range":"154","text":"155"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, tripId, handleErrors]",{"range":"156","text":"157"},"Update the dependencies array to be: [isLoading, props.token, props.isAuth, updateData]",{"range":"158","text":"159"},[1774,1776],"[isAuthenticated, tokenId]",[1618,1651],"[props.token, props.refreshState, props.isAuth, props.id]",[1799,1837],"[isLoading, props.token, props.isAuth, tripId, handleErrors]",[2745,2783],"[isLoading, props.token, props.isAuth, updateData]"]