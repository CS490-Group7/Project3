[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/JoinTrip.js":"4","/home/ec2-user/environment/Project3/src/Activity.js":"5","/home/ec2-user/environment/Project3/src/CreateTrip.js":"6","/home/ec2-user/environment/Project3/src/Nav.js":"7","/home/ec2-user/environment/Project3/src/Trip.js":"8","/home/ec2-user/environment/Project3/src/components/HomePage.js":"9","/home/ec2-user/environment/Project3/src/api/api.js":"10","/home/ec2-user/environment/Project3/src/Login.js":"11","/home/ec2-user/environment/Project3/src/Logout.js":"12","/home/ec2-user/environment/Project3/src/InputEmails.js":"13","/home/ec2-user/environment/Project3/src/refreshToken.js":"14"},{"size":500,"mtime":1617932993876,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1617824026869,"results":"17","hashOfConfig":"16"},{"size":2631,"mtime":1619470375205,"results":"18","hashOfConfig":"16"},{"size":966,"mtime":1619490552178,"results":"19","hashOfConfig":"16"},{"size":3520,"mtime":1619539961995,"results":"20","hashOfConfig":"16"},{"size":3049,"mtime":1619489743432,"results":"21","hashOfConfig":"16"},{"size":1955,"mtime":1619480894382,"results":"22","hashOfConfig":"16"},{"size":2239,"mtime":1619536149481,"results":"23","hashOfConfig":"16"},{"size":3055,"mtime":1619533579540,"results":"24","hashOfConfig":"16"},{"size":2432,"mtime":1618970963545,"results":"25","hashOfConfig":"16"},{"size":1429,"mtime":1619470375205,"results":"26","hashOfConfig":"16"},{"size":694,"mtime":1618970963545,"results":"27","hashOfConfig":"16"},{"size":1561,"mtime":1619533389278,"results":"28","hashOfConfig":"16"},{"size":720,"mtime":1618970963545,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"168wlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/ec2-user/environment/Project3/src/index.js",[],["61","62"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["63","64"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",["65"],"/home/ec2-user/environment/Project3/src/CreateTrip.js",["66","67"],"import Trip from './Trip';\nimport React, { useState } from 'react';\n\n\nimport { createTripApi, inviteToTripApi } from './api/api.js';\n\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport { getInvitedEmails, InputEmails } from './InputEmails';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n    const history = useHistory();\n    //const user = useState('');\n    const { register, handleSubmit } = useForm();\n    \n    var code = \"\";\n    function joinCode() {\n      \n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    \n      for (var i = 0; i < 7; i++)\n        code += possible.charAt(Math.floor(Math.random() * possible.length));\n      return code;\n    }\n    \n\n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      console.log(data);\n      data.join_code=joinCode();\n      // doesnt redirect till all fields are filled up\n      if(props.token !== \"\"){\n            createTripApi(props.token, data).then(data => history.push('/trip/' + data.tripId));\n      }\n      const emails = getInvitedEmails().map(email => email['value'])\n      console.log(emails);\n      \n      if(emails !== []){\n          inviteToTripApi(props.token, emails, data['join_code'])\n      }\n    }\n// sample Trip1- code: uw1YGGD\n\n    return(\n        <div className=\"activity\">\n            {props.isAuth?(\n            <div>\n                <h3 className=\"headingClass\">Create a new trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n\n                        <div><label for=\"Name\" className=\"labels\"> Enter Trip name :</label>\n                        <input required type=\"text\" id=\"Name\" className=\"createTripInputs1\" placeholder=\"eg., Vegas\" {...register(\"trip_name\", {required: true, maxLength: 17})} /></div>\n                        \n                        <div><label for=\"tripStart\" className=\"labels\">Trip's Start Date:</label>\n                        <input required type=\"date\" id=\"tripStart\" className=\"createTripInputs\" placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                      \n                        <div><label for=\"tripEnd\" className=\"labels\"> Trip's End Date :</label>\n                        <input required type=\"date\" id=\"tripEnd\" className=\"createTripInputs\" placeholder=\"End Date\" {...register(\"End Date\", {required: true})}/></div>\n                       \n                        <div><label className=\"labels\">Invite Participants: </label>\n                        <InputEmails/></div>\n                        <hr/>\n                        <div><button type=\"submit\" className=\"tripSubmit\">Create Trip</button></div>\n                </form>\n            </div>)\n            :null}\n\n            <Router>\n                <div>\n                    <Route path=\"/trip\" component={Trip}/>\n                </div>\n            </Router>\n\n                \n        </div>\n        );\n}\n\nexport default CreateTrip;\n","/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/Trip.js",["68","69","70","71","72","73"],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["74","75"],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":13,"column":26,"nodeType":"82","messageId":"83","endLine":13,"endColumn":32},{"ruleId":"84","severity":1,"message":"85","line":31,"column":8,"nodeType":"86","endLine":31,"endColumn":10,"suggestions":"87"},{"ruleId":"80","severity":1,"message":"88","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"89","line":2,"column":17,"nodeType":"82","messageId":"83","endLine":2,"endColumn":25},{"ruleId":"80","severity":1,"message":"90","line":10,"column":53,"nodeType":"82","messageId":"83","endLine":10,"endColumn":57},{"ruleId":"80","severity":1,"message":"91","line":4,"column":20,"nodeType":"82","messageId":"83","endLine":4,"endColumn":27},{"ruleId":"80","severity":1,"message":"92","line":12,"column":12,"nodeType":"82","messageId":"83","endLine":12,"endColumn":21},{"ruleId":"80","severity":1,"message":"93","line":13,"column":13,"nodeType":"82","messageId":"83","endLine":13,"endColumn":22},{"ruleId":"80","severity":1,"message":"94","line":15,"column":12,"nodeType":"82","messageId":"83","endLine":15,"endColumn":18},{"ruleId":"80","severity":1,"message":"95","line":17,"column":14,"nodeType":"82","messageId":"83","endLine":17,"endColumn":23},{"ruleId":"84","severity":1,"message":"96","line":44,"column":7,"nodeType":"86","endLine":44,"endColumn":20,"suggestions":"97"},{"ruleId":"84","severity":1,"message":"98","line":55,"column":8,"nodeType":"86","endLine":55,"endColumn":35,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":73,"column":15,"nodeType":"102","endLine":73,"endColumn":61},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["105"],"'Login' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'userApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'emails' is assigned a value but never used.","'printData' is defined but never used.","React Hook useEffect has a missing dependency: 'tripId'. Either include it or remove the dependency array.",["106"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["107"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"114","text":"115"},"Update the dependencies array to be: [props.token, tripId]",{"range":"116","text":"117"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"118","text":"119"},[1084,1086],"[isAuthenticated, tokenId]",[1645,1658],"[props.token, tripId]",[2009,2036],"[props.token, props.isAuth, updateData]"]