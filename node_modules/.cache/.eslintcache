[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/Nav.js":"5","/home/ec2-user/environment/Project3/src/JoinTrip.js":"6","/home/ec2-user/environment/Project3/src/TripHome.js":"7","/home/ec2-user/environment/Project3/src/components/HomePage.js":"8","/home/ec2-user/environment/Project3/src/CreateTrip.js":"9","/home/ec2-user/environment/Project3/src/Login.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/refreshToken.js":"13","/home/ec2-user/environment/Project3/src/InputEmails.js":"14","/home/ec2-user/environment/Project3/src/Trip.js":"15"},{"size":500,"mtime":1617893326172,"results":"16","hashOfConfig":"17"},{"size":2631,"mtime":1618982306366,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1617893326172,"results":"19","hashOfConfig":"17"},{"size":2530,"mtime":1619488596225,"results":"20","hashOfConfig":"17"},{"size":1955,"mtime":1619487344696,"results":"21","hashOfConfig":"17"},{"size":928,"mtime":1619559333735,"results":"22","hashOfConfig":"17"},{"size":441,"mtime":1618857780453,"results":"23","hashOfConfig":"17"},{"size":3525,"mtime":1619543068276,"results":"24","hashOfConfig":"17"},{"size":3106,"mtime":1619564217241,"results":"25","hashOfConfig":"17"},{"size":1418,"mtime":1619538103714,"results":"26","hashOfConfig":"17"},{"size":696,"mtime":1619487925169,"results":"27","hashOfConfig":"17"},{"size":2809,"mtime":1619552636263,"results":"28","hashOfConfig":"17"},{"size":720,"mtime":1618982306378,"results":"29","hashOfConfig":"17"},{"size":1596,"mtime":1619564321141,"results":"30","hashOfConfig":"17"},{"size":2193,"mtime":1619487344700,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"168wlww",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"/home/ec2-user/environment/Project3/src/index.js",[],["69","70"],"/home/ec2-user/environment/Project3/src/App.js",["71","72"],"import { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport Trip from './Trip';\n\n\nimport {BrowserRouter as Router, HashRouter, Switch,Route} from \"react-router-dom\";\n// removed props from App()\nfunction App() {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth !== undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    //<Route path=\"/trip\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n    return (\n    <HashRouter>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/jointrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/createtrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route path=\"/trip/:tripId\" render={(props) => ( <Trip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </HashRouter>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Activity.js",["73"],"import Login from './Login.js';\nimport {useState} from 'react';\nimport './App.css';\n\n//import { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\n// get all the users in the trip from the database\n\n// allow any user to create an activity in the form of a dictionary {USERNAME: amount_spent}\n\n// split money equally within the activity by TOTAL_MONEY_SPENT/total_number_of_users\n\nfunction Activity(){\n    \n    const [inputList, setInputList] = useState([{ activityName: \"\", amount: \"\", participants: \"\"  }]);\n     \n    // handle input change\n    const handleInputChange = (e, index) => {\n      const { name, value } = e.target;\n      const list = [...inputList];\n      list[index][name] = value;\n      setInputList(list);\n    };\n     \n    // handle click event of the Remove button\n    const handleRemoveClick = index => {\n      const list = [...inputList];\n      list.splice(index, 1);\n      setInputList(list);\n    };\n     \n    // handle click event of the Add button\n    const handleAddClick = () => {\n      setInputList([...inputList, { activityName: \"\", amount: \"\", participants: \"\" }]);\n    };\n    \n    return (\n      <div className=\"Activity\">\n      <h3>Your Activities for the trip:</h3>\n        {inputList.map((x, i) => {\n          return (\n            <div className=\"box\">\n              <input\n                name=\"activityName\"\n                className=\"ml10\"\n                placeholder=\"Enter Activity Name\"\n                value={x.activityName}\n                onChange={e => handleInputChange(e, i)}\n              />\n              <input\n                name=\"amount\"\n                className=\"ml10\"\n                placeholder=\"Enter Amount\"\n                value={x.amount}\n                onChange={e => handleInputChange(e, i)}\n              />\n              <input\n                className=\"ml10\"\n                name=\"participants\"\n                placeholder=\"Enter Participants\"\n                value={x.participants}\n                onChange={e => handleInputChange(e, i)}\n              />\n              <div className=\"btn-box\">\n                {inputList.length !== 1 && <button\n                  className=\"mr10\"\n                  onClick={() => handleRemoveClick(i)}>Remove</button>}\n                {inputList.length - 1 === i && <button onClick={handleAddClick}>Add</button>}\n              </div>\n            </div>\n          );\n        })}\n        <div style={{ marginTop: 20 }}>{JSON.stringify(inputList.activityName)}</div>\n      </div>\n    );\n}\n\nexport default Activity;\n","/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/TripHome.js",["74"],"  \nimport React from 'react';\nimport Login from './Login.js';\nfunction TripHome(props)\n{console.log(props.name)\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your TripHome!</h3></div>\n             <div><button>Click</button></div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default TripHome;",["75","76"],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["77","78"],"import { useState, useEffect } from 'react';\n// import Login from'../Login.js';\n// import Logout from'../Logout.js';\n//import {loginApi, userApi} from '../api/api.js';\nimport { userApi,deleteTripIdApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n    const [isViewable, setViewable] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n    const [trips, setTrips] = useState([]);\n    const [hide, setHide]=useState(true)\n    \n    function randomImages(){\n      var images = [\"https://i.stack.imgur.com/CJT47.jpg\",\"https://www.freegreatpicture.com/files/85/2994-man-and-nature.jpg\"\n                    ,\"https://www.freegreatpicture.com/files/31/10971-world-scenery.jpg\"\n                    ,\"https://media.cntraveler.com/photos/5949abf42bd0d42819c6065e/master/pass/Big-Bend-GettyImages-516259396.jpg\"\n                    ,\"https://media.timeout.com/images/105685502/image.jpg\"];\n     var randomImage = images[Math.floor(Math.random()*images.length)];\n      return randomImage;\n    }\n    \n    \n    function updateData(data){\n      // If the user data API call fails, log the user out.\n      if(data.hasOwnProperty('success')){\n        if(data.success === false){\n          props.logout();\n        }\n        else{\n          setEmail(data.email);\n          setLastName(data.lastName);\n          setFirstName(data.firstName);\n          setTrips(data.trips);\n          //console.log(data.trips);\n        }\n      }\n\n    }\n    function deleteTrip(trip_id)\n    {\n      alert(\"Deleteing the Trip \"+trip_id)\n      if(props.token !== \"\")\n        {\n          deleteTripIdApi(props.token, trip_id).then(data => console.log(data));\n        }\n      \n      \n    }\n    \n    //Rerender component when token ID and isAuth updates.\n    useEffect(() => {\n      //If user is logged in and the token ID is valid, update home page\n      if(props.token !== \"\" && props.isAuth)\n        userApi(props.token).then(data => updateData(data)).then(data => setViewable(true));\n  \n      //Upon user logout, clear all user data\n      if(!props.isAuth){\n        setEmail(\"\");\n        setLastName(\"\");\n        setFirstName(\"\");\n        setViewable(false);\n      }\n    }, [props.token, props.isAuth]);\n// <button className=\"tripsButton\">{trip.name} </button>\n  \n  if(isViewable){\n    return (\n      <div className=\"homePage\">\n        <h2>Hello, {firstName}!</h2>\n        <h5>Email: {email}</h5>\n        <h5>Last Name: {lastName}</h5>\n        <div>\n          <button className=\"hideButton\" onClick={()=>{setHide(!hide)}} >Show / Hide Trips<br /></button>\n        </div>\n        {trips.map((trip, index) => {\n        return (\n        <div>\n        {!hide ? (\n        <div className=\"container\">\n          <div className=\"row row-cols-3\">\n            <div className=\"col\">\n              <a href={`/#/trip/${trip.trip_id}`}>\n                <img className=\"images\" src={randomImages()}/>\n                <span className=\"align-middle\">{trip.name}</span>\n                <div>\n                  \n                </div>\n              </a>\n              <button type=\"submit\" onClick={()=>deleteTrip(trip.trip_id)}>Delete</button>\n              </div>\n            </div>\n          </div>\n          ):null}\n        </div>\n        \n        );\n      })}\n      </div>\n    );\n  }\n  else{\n    return (<div>\n      <h2>Please log in!</h2>\n    </div>\n    );\n  }\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/CreateTrip.js",["79","80"],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",[],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",[],"/home/ec2-user/environment/Project3/src/Trip.js",["81","82","83","84","85","86"],"import React, {useState, useEffect} from 'react';\nimport Activity from './Activity.js'\nimport {useParams} from \"react-router-dom\";\nimport { tripIdApi,userApi } from './api/api.js';\n\nfunction Trip(props)\n{\n     let { tripId } = useParams();\n     \n    const [tripName, setTripName] = useState(\"\");\n    const [tripOwner, setTripOwner] = useState(\"\");\n    const [tripUsers, setTripUsers] = useState([]);\n    const [ isLoading, setIsLoading ] = useState(false);\n    const [fullname, setFullname] = useState([]);\n    const [emails,setEmails] = useState([]);\n  \n    function printData(data)\n    {\n        console.log(data)\n        setTripName(data.tripName)\n        setTripOwner(data.tripOwner)\n        setTripUsers(data.participants[0].firstName)\n    }\n\n// useEffect is running infinitely\n    useEffect(() => {\n        async function fetchData() {\n            console.log('look')\n            setIsLoading(true);\n            const fetcher = await tripIdApi(props.token, tripId);\n            console.log(\"showing fetcher\",fetcher)\n            setTripName(fetcher.tripName)\n            setTripOwner(fetcher.tripOwner)\n            setFullname([]);\n            setEmails([]);\n            //fetcher.participants.map((index)=>setEmails(prev=>[...prev,index.email]));\n            fetcher.participants.map((index)=>setFullname(prev=>[...prev,index.firstName+index.lastName]));\n            setIsLoading(false);\n        }\n        fetchData();\n        //   //If user is logged in and the token ID is valid, update home page\n        //   if(props.token !== \"\" && props.isAuth)\n        //     tripIdApi(props.token, tripId).then(data => printData(data));\n    },[props.token]);\n    \n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to trip: {tripName}!</h3></div>\n             \n             <div><h6>Trip users: {fullname.map(index=><h6>{index}</h6>)}</h6></div>\n             \n             <div class=\"triptext\">\n\n                <h2>Trip creator: {tripOwner}</h2>\n                <Activity/>\n\n             </div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default Trip;",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":13,"column":26,"nodeType":"93","messageId":"94","endLine":13,"endColumn":32},{"ruleId":"95","severity":1,"message":"96","line":31,"column":8,"nodeType":"97","endLine":31,"endColumn":10,"suggestions":"98"},{"ruleId":"91","severity":1,"message":"99","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":13},{"ruleId":"91","severity":1,"message":"99","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},{"ruleId":"87","replacedBy":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"95","severity":1,"message":"102","line":66,"column":8,"nodeType":"97","endLine":66,"endColumn":35,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":86,"column":17,"nodeType":"106","endLine":86,"endColumn":63},{"ruleId":"91","severity":1,"message":"107","line":2,"column":17,"nodeType":"93","messageId":"94","endLine":2,"endColumn":25},{"ruleId":"91","severity":1,"message":"108","line":10,"column":53,"nodeType":"93","messageId":"94","endLine":10,"endColumn":57},{"ruleId":"91","severity":1,"message":"109","line":4,"column":20,"nodeType":"93","messageId":"94","endLine":4,"endColumn":27},{"ruleId":"91","severity":1,"message":"110","line":12,"column":12,"nodeType":"93","messageId":"94","endLine":12,"endColumn":21},{"ruleId":"91","severity":1,"message":"111","line":13,"column":13,"nodeType":"93","messageId":"94","endLine":13,"endColumn":22},{"ruleId":"91","severity":1,"message":"112","line":15,"column":12,"nodeType":"93","messageId":"94","endLine":15,"endColumn":18},{"ruleId":"91","severity":1,"message":"113","line":17,"column":14,"nodeType":"93","messageId":"94","endLine":17,"endColumn":23},{"ruleId":"95","severity":1,"message":"114","line":44,"column":7,"nodeType":"97","endLine":44,"endColumn":20,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'Login' is defined but never used.",["116"],["117"],"React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["119"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Link' is defined but never used.","'userApi' is defined but never used.","'tripUsers' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'emails' is assigned a value but never used.","'printData' is defined but never used.","React Hook useEffect has a missing dependency: 'tripId'. Either include it or remove the dependency array.",["120"],"no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"127","text":"128"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"129","text":"130"},"Update the dependencies array to be: [props.token, tripId]",{"range":"131","text":"132"},[1084,1086],"[isAuthenticated, tokenId]",[2256,2283],"[props.token, props.isAuth, updateData]",[1641,1654],"[props.token, tripId]"]