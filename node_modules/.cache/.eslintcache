[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Login.js":"4","/home/ec2-user/environment/Project3/src/Logout.js":"5","/home/ec2-user/environment/Project3/src/Dashboard.js":"6","/home/ec2-user/environment/Project3/src/refreshToken.js":"7","/home/ec2-user/environment/Project3/src/api/api.js":"8","/home/ec2-user/environment/Project3/src/Nav.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10","/home/ec2-user/environment/Project3/src/Activity.js":"11","/home/ec2-user/environment/Project3/src/JoinTrip.js":"12","/home/ec2-user/environment/Project3/src/CreateTrip.js":"13","/home/ec2-user/environment/Project3/src/TripHome.js":"14"},{"size":500,"mtime":1617932993876,"results":"15","hashOfConfig":"16"},{"size":3000,"mtime":1618543912532,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1617824026869,"results":"18","hashOfConfig":"16"},{"size":1662,"mtime":1618246719809,"results":"19","hashOfConfig":"16"},{"size":795,"mtime":1618538472600,"results":"20","hashOfConfig":"16"},{"size":763,"mtime":1618255798668,"results":"21","hashOfConfig":"16"},{"size":720,"mtime":1617847354012,"results":"22","hashOfConfig":"16"},{"size":1557,"mtime":1618515641912,"results":"23","hashOfConfig":"16"},{"size":2140,"mtime":1618539242221,"results":"24","hashOfConfig":"16"},{"size":904,"mtime":1618539242221,"results":"25","hashOfConfig":"16"},{"size":879,"mtime":1618428093423,"results":"26","hashOfConfig":"16"},{"size":740,"mtime":1618539242217,"results":"27","hashOfConfig":"16"},{"size":2179,"mtime":1618543371524,"results":"28","hashOfConfig":"16"},{"size":388,"mtime":1618543912544,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"168wlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/Project3/src/index.js",[],["69","70"],"/home/ec2-user/environment/Project3/src/App.js",["71","72","73","74","75","76","77","78"],"import logo from './logo.svg';\nimport React, { useState, Component } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport TripHome from './TripHome';\n\n\nimport {BrowserRouter as Router, Switch,Route,Link} from \"react-router-dom\";\n\nclass App extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      this.state = {\n        isAuthenticated: false,\n        tokenId: ''\n      }\n    }\n  \n      // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    componentDidMount() {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = this.state.isAuthenticated;\n      let newToken = this.state.tokenId;\n      if(storedAuth != undefined)\n        newAuth = storedAuth;\n      if(storedTokenId != undefined)\n        newToken = storedTokenId;\n      this.setState({ isAuthenticated: newAuth, tokenId: newToken });\n    }\n  \n    // Allows children of components to update the global 'logged in' state.\n    authHandler = (auth) => {\n      let data = this.state;\n      data['isAuthenticated'] = auth;\n      this.setState(data);\n      localStorage.setItem(\"isAuth\", auth);\n    }\n    \n    // Allows children of components to update the global 'token ID' state.\n    tokenHandler = (tokenId) => {\n        const data = this.state;\n        data['tokenId'] = tokenId;\n        this.setState(data);\n        localStorage.setItem('tokenId', tokenId );\n    }\n\n  render() {\n    return (\n    <Router>\n    <div className=\"App\">\n        <Nav auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId}/>\n        <Switch>\n          <Route exact path=\"/Home\" render={(props) => ( <HomePage auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId} /> )}/>\n          <Route exact path=\"/Activity\" render={(props) => ( <Activity auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId} /> )}/>\n          <Route exact path=\"/JoinTrip\" render={(props) => ( <JoinTrip auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId} /> )}/>\n          <Route exact path=\"/CreateTrip\" render={(props) => ( <CreateTrip auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId} /> )}/>\n          <Route exact path=\"/TripHome\" render={(props) => ( <TripHome auth={this.authHandler} token={this.tokenHandler} isAuth={this.state.isAuthenticated} currentToken={this.state.tokenId} /> )}/>\n\n        </Switch>\n      </div>\n    </Router>);\n  }\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Login.js",["79","80","81"],"import React, { useState } from 'react';\nimport dotenv from 'dotenv';\nimport {GoogleLogin} from 'react-google-login';\n\nimport {refreshTokenSetup} from './refreshToken.js';\nimport {loginApi} from './api/api.js';\nimport Dashboard from './Dashboard';\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props)\n{\n    //const [email,setEmail] = useState('');\n    //const [name,setName] = useState('');\n    //const [tokenId, setTokenId] = useState('');\n    //const [givenName,setGivenName] = useState('');\n    const [logStatus,setLogStatus] = useState(false);\n    \n    const onSuccess= (res)=>\n    {\n        console.log('[Login Success] currentUser:',res.tokenId);\n        loginApi(res.tokenId).then(data => console.log('Verified API login:', data));\n        //setTokenId(res.tokenId);\n        //setEmail(res.profileObj['email']);\n        //setName(res.profileObj['name']);\n        //setGivenName(res.profileObj['givenName']);\n        setLogStatus(true);\n        refreshTokenSetup(res);\n        props.authHandler(true);\n        props.tokenHandler(res.tokenId);\n    };\n    const onFailure = (res)=> \n    {\n        console.log('[Login failed] res: ',res);\n    }\n\n    return (\n            <div>\n                <div>\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy ={'single_host_origin'}\n                    style ={{marginTop: '100px'}}\n                    isSignedIn={false}\n                />\n                </div>\n            </div>\n            );\n}\n\nexport default Login;\n","/home/ec2-user/environment/Project3/src/Logout.js",["82","83"],"import React from 'react';\nimport dotenv from 'dotenv'\nimport Login from'./Login.js';\nimport { GoogleLogout } from 'react-google-login';\nimport {logoutApi} from './api/api.js';\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Logout(props)\n{\n    const onSuccess=()=>\n    {\n        logoutApi(props.currentToken).then(data => console.log('Verified API logout:', data));\n        props.authHandler(false);\n        props.tokenHandler(\"\");\n        console.log('Logout made successfully');\n    };\n    \n    return(\n        <div>\n                <GoogleLogout\n                clientId={clientId}\n                buttonText=\"Logout\"\n                onLogoutSuccess={onSuccess}\n                style ={{marginTop: '100px'}}\n                />\n        </div>\n        );\n}\n\nexport default Logout;\n","/home/ec2-user/environment/Project3/src/Dashboard.js",["84","85","86","87","88"],"import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\n\nfunction Dashboard(props){\n    return(\n        <div>\n            <ul>GIVEN NAME: {(props.givenName).charAt(0).toUpperCase() + (props.givenName).slice(1)}</ul>\n            <ul>FULLNAME: {props.name}</ul>\n            <ul>EMAIL: {props.email}</ul>\n            <Logout/>\n            <Router>\n                <div>\n                    <ul to='/logout'></ul>\n                    <Route path=\"/logout\" component={Logout} />\n                </div>\n            </Router>\n            \n        </div>\n        );\n}\n\nexport default Dashboard;\n","/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",["89","90"],"const fetch = require(\"node-fetch\");\n\nconst loginApi = (tokenId) => {\n    //console.log('token id is', tokenId);\n    const data = {'token_id': tokenId};\n    //console.log('data is', data)\n    return fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst logoutApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/logout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst userApi = (tokenId) => {\n    return fetch('/api/user', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\n\nconst joinTripApi = (tokenId) => {\n    return fetch('/api/joinTrip', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\nconst tripIdApi = (tokenId) => {\n    return fetch('/api/trip/trip_id={id}', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\nexport {\n    loginApi,\n    logoutApi,\n    userApi\n}","/home/ec2-user/environment/Project3/src/Nav.js",["91","92","93","94","95","96","97","98"],"import logo from './logo.svg';\nimport React, { useState, Component } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport Activity from './Activity';\nimport CreateTrip from './CreateTrip';\n\nimport {BrowserRouter as Router, Switch,Route,Link} from \"react-router-dom\";\n\n// <div>\n//     {this.props.isAuth && <Login tokenHandler={this.props.token} \n//     authHandler={this.props.auth}/>?\n//     (\n//     <Link className='navStyle'to='/Activity'><li><button>Activity</button></li></Link>\n//     )\n//     :null}\n// </div>\n\nclass Nav extends React.Component {\n    render(){\n        return(\n    <nav className='navStyle'>\n       <h1 className='topic'>STIPEND ...</h1>\n\n        <ul className=\"nav-links\">\n        <div>\n            {this.props.isAuth && <Login tokenHandler={this.props.token} \n            authHandler={this.props.auth}/>?\n            (\n            <Link className='navStyle'to='/Home'><li><button className=\"home\">Home</button></li></Link>\n            )\n            :null}\n        </div>\n        <div>\n            {this.props.isAuth && <Login tokenHandler={this.props.token} \n            authHandler={this.props.auth}/>?\n            (\n            <Link className='navStyle'to='/JoinTrip'><li><button className=\"joinTripbtn\">JoinTrip</button></li></Link>\n            )\n            :null}\n        </div>\n        <div>\n            {this.props.isAuth && <Login tokenHandler={this.props.token} \n            authHandler={this.props.auth}/>?\n            (\n            <Link className='navStyle'to='/CreateTrip'><li><button className=\"createTrip\">CreateTrip</button></li></Link>\n            )\n            :null}\n        </div>\n            { !this.props.isAuth && <Login tokenHandler={this.props.token} authHandler={this.props.auth}/> }\n            { this.props.isAuth && <Logout tokenHandler={this.props.token} authHandler={this.props.auth} currentToken={this.props.currentToken} /> }\n        </ul>\n    </nav>\n    );\n    }\n}\n\nexport default Nav;\n\n//<button type=\"submit\" onClick={()=>{<Router><Switch><Route path=\"/Activity\" exact component={Test}/></Switch></Router>}}>Activity</button>","/home/ec2-user/environment/Project3/src/components/HomePage.js",["99","100","101","102","103"],"import React, { useState } from 'react';\nimport Login from '../Login.js';\nimport Logout from '../Logout.js';\nimport Activity from '../Activity.js';\nimport {loginApi, userApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n  function onClickButton() {\n    userApi(props.currentToken).then(data => console.log('Verified Status:', props));\n  }\n  //<button onClick={onClickButton} type=\"button\">Test API</button>\n  // { props.isAuth && 'Token ID: ' && props.currentToken }\n  return (\n            <div className=\"activity\">\n             {props.isAuth && <Login tokenHandler={props.token} \n             authHandler={props.auth}/>?(\n             <div>\n\n             <h3>Welcome to your Home Page</h3>\n              <p>{userApi}</p>\n             </div>\n             )\n             :null}\n\n\n\n        </div>\n  )\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/Activity.js",["104","105","106","107","108","109","110","111"],"import logo from './logo.svg';\nimport Login from './Login.js';\nimport Logout from './Logout.js';\nimport React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\n\n// get all the users in the trip from the database\n\n// allow any user to create an activity in the form of a dictionary {USERNAME: amount_spent}\n\n// split money equally within the activity by TOTAL_MONEY_SPENT/total_number_of_users\n\nfunction Activity(props){\n    const activity= ()=>\n    {\n        <div><h3>Welcome to your Activity Page!</h3></div>\n    }\n    return(\n        <div className=\"activity\">\n             {props.isAuth && <Login tokenHandler={props.token} authHandler={props.auth}/>?\n             (<div><h3>Welcome to your Activity Page!</h3></div>):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\n\nexport default Activity;\n\n","/home/ec2-user/environment/Project3/src/JoinTrip.js",["112","113","114","115","116","117","118"],"import logo from './logo.svg';\nimport Login from './Login.js';\nimport Logout from './Logout.js';\nimport React, { useState,useRef } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n\nfunction JoinTrip(props){\n    const user = useRef('');\n   \n    return(\n        <div className=\"activity\">\n             {props.isAuth && <Login tokenHandler={props.token} authHandler={props.auth}/>?\n             (<div><h3>Welcome to your Join Page!</h3>\n              <input ref={user} type=\"Number\" />\n              <button onClick={()=>alert(user.current.value)} type=\"submit\" required>Enter</button>\n             </div>)\n             :null}\n        </div>\n        );\n}\n\nexport default JoinTrip;","/home/ec2-user/environment/Project3/src/CreateTrip.js",["119","120","121","122","123","124","125","126"],"import Login from './Login.js';\nimport TripHome from './TripHome';\nimport React, { useState,useRef } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport { BrowserRouter as Router,Switch,Route, Link} from \"react-router-dom\";\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n\n    const user = useState('');\n    const [dataa,setDataa]=useState(false);\n    const numberOfUser = useState(0);\n    const [date,setDate] = useState([]);\n    const [email,setEmail]=useState([]);\n    const { register, handleSubmit, formState: { errors } } = useForm();\n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      //console.log(data);\n      setDataa(true);\n      console.log(dataa);\n  }\n  \n  \n  console.log(errors);\n\n    return(\n        <div className=\"activity\">\n            \n             {props.isAuth && <Login tokenHandler={props.token} authHandler={props.auth}/>?(\n             <div>\n                <h3>Welcome to your Create Trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                        <div><input type=\"text\"  placeholder=\"Trip Name*\" {...register(\"Trip Name\", {required: true, maxLength: 17})} /></div>\n                        <div><input type=\"text\"  placeholder=\"Full Name\" {...register(\"Full name\", {required: true, maxLength: 80})} /></div>\n                        <div><input type=\"text\"  placeholder=\"Email\" {...register(\"Email\", {required: true, pattern: /^\\S+@\\S+$/i})} /></div>\n                        <div><input type=\"date\"  placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                        <div><input type=\"date\"  placeholder=\"End Date\" {...register(\"End Date\", {required: true})} /></div>\n                        <div><Link to='./TripHome'><input type=\"submit\"/></Link></div>\n                </form>\n             </div>)\n             :null}\n            \n            {dataa?(\n                <Router>\n                    <div>\n                        <Route path=\"/TripHome\" component={TripHome}/>\n                    </div>\n                </Router>):null}\n\n        </div>\n        );\n}\n\nexport default CreateTrip;\n\n\n\n","/home/ec2-user/environment/Project3/src/TripHome.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":25},{"ruleId":"131","severity":1,"message":"136","line":2,"column":27,"nodeType":"133","messageId":"134","endLine":2,"endColumn":36},{"ruleId":"131","severity":1,"message":"137","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"138","line":5,"column":8,"nodeType":"133","messageId":"134","endLine":5,"endColumn":14},{"ruleId":"131","severity":1,"message":"139","line":14,"column":47,"nodeType":"133","messageId":"134","endLine":14,"endColumn":51},{"ruleId":"140","severity":1,"message":"141","line":32,"column":21,"nodeType":"142","messageId":"143","endLine":32,"endColumn":23},{"ruleId":"140","severity":1,"message":"141","line":34,"column":24,"nodeType":"142","messageId":"143","endLine":34,"endColumn":26},{"ruleId":"131","severity":1,"message":"144","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"145","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":17},{"ruleId":"131","severity":1,"message":"146","line":17,"column":12,"nodeType":"133","messageId":"134","endLine":17,"endColumn":21},{"ruleId":"131","severity":1,"message":"144","line":2,"column":8,"nodeType":"133","messageId":"134","endLine":2,"endColumn":14},{"ruleId":"131","severity":1,"message":"137","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":25},{"ruleId":"131","severity":1,"message":"137","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":13},{"ruleId":"131","severity":1,"message":"147","line":6,"column":33,"nodeType":"133","messageId":"134","endLine":6,"endColumn":39},{"ruleId":"131","severity":1,"message":"139","line":6,"column":46,"nodeType":"133","messageId":"134","endLine":6,"endColumn":50},{"ruleId":"131","severity":1,"message":"148","line":38,"column":7,"nodeType":"133","messageId":"134","endLine":38,"endColumn":18},{"ruleId":"131","severity":1,"message":"149","line":48,"column":7,"nodeType":"133","messageId":"134","endLine":48,"endColumn":16},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":12},{"ruleId":"131","severity":1,"message":"135","line":2,"column":17,"nodeType":"133","messageId":"134","endLine":2,"endColumn":25},{"ruleId":"131","severity":1,"message":"136","line":2,"column":27,"nodeType":"133","messageId":"134","endLine":2,"endColumn":36},{"ruleId":"131","severity":1,"message":"150","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":16},{"ruleId":"131","severity":1,"message":"151","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":18},{"ruleId":"131","severity":1,"message":"152","line":9,"column":26,"nodeType":"133","messageId":"134","endLine":9,"endColumn":32},{"ruleId":"131","severity":1,"message":"147","line":9,"column":34,"nodeType":"133","messageId":"134","endLine":9,"endColumn":40},{"ruleId":"131","severity":1,"message":"153","line":9,"column":41,"nodeType":"133","messageId":"134","endLine":9,"endColumn":46},{"ruleId":"131","severity":1,"message":"135","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"138","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"150","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":16},{"ruleId":"131","severity":1,"message":"154","line":5,"column":9,"nodeType":"133","messageId":"134","endLine":5,"endColumn":17},{"ruleId":"131","severity":1,"message":"155","line":9,"column":12,"nodeType":"133","messageId":"134","endLine":9,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":12},{"ruleId":"131","severity":1,"message":"138","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"135","line":4,"column":17,"nodeType":"133","messageId":"134","endLine":4,"endColumn":25},{"ruleId":"131","severity":1,"message":"152","line":6,"column":27,"nodeType":"133","messageId":"134","endLine":6,"endColumn":33},{"ruleId":"131","severity":1,"message":"147","line":6,"column":34,"nodeType":"133","messageId":"134","endLine":6,"endColumn":40},{"ruleId":"131","severity":1,"message":"153","line":6,"column":41,"nodeType":"133","messageId":"134","endLine":6,"endColumn":46},{"ruleId":"131","severity":1,"message":"139","line":6,"column":48,"nodeType":"133","messageId":"134","endLine":6,"endColumn":52},{"ruleId":"131","severity":1,"message":"156","line":16,"column":11,"nodeType":"133","messageId":"134","endLine":16,"endColumn":19},{"ruleId":"131","severity":1,"message":"132","line":1,"column":8,"nodeType":"133","messageId":"134","endLine":1,"endColumn":12},{"ruleId":"131","severity":1,"message":"138","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"135","line":4,"column":17,"nodeType":"133","messageId":"134","endLine":4,"endColumn":25},{"ruleId":"131","severity":1,"message":"152","line":6,"column":27,"nodeType":"133","messageId":"134","endLine":6,"endColumn":33},{"ruleId":"131","severity":1,"message":"147","line":6,"column":34,"nodeType":"133","messageId":"134","endLine":6,"endColumn":40},{"ruleId":"131","severity":1,"message":"153","line":6,"column":41,"nodeType":"133","messageId":"134","endLine":6,"endColumn":46},{"ruleId":"131","severity":1,"message":"139","line":6,"column":48,"nodeType":"133","messageId":"134","endLine":6,"endColumn":52},{"ruleId":"131","severity":1,"message":"157","line":3,"column":26,"nodeType":"133","messageId":"134","endLine":3,"endColumn":32},{"ruleId":"131","severity":1,"message":"147","line":6,"column":34,"nodeType":"133","messageId":"134","endLine":6,"endColumn":40},{"ruleId":"131","severity":1,"message":"158","line":10,"column":11,"nodeType":"133","messageId":"134","endLine":10,"endColumn":15},{"ruleId":"131","severity":1,"message":"159","line":12,"column":11,"nodeType":"133","messageId":"134","endLine":12,"endColumn":23},{"ruleId":"131","severity":1,"message":"160","line":13,"column":12,"nodeType":"133","messageId":"134","endLine":13,"endColumn":16},{"ruleId":"131","severity":1,"message":"161","line":13,"column":17,"nodeType":"133","messageId":"134","endLine":13,"endColumn":24},{"ruleId":"131","severity":1,"message":"162","line":14,"column":12,"nodeType":"133","messageId":"134","endLine":14,"endColumn":17},{"ruleId":"131","severity":1,"message":"163","line":14,"column":18,"nodeType":"133","messageId":"134","endLine":14,"endColumn":26},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Component' is defined but never used.","'Login' is defined but never used.","'Logout' is defined but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'dotenv' is defined but never used.","'Dashboard' is defined but never used.","'logStatus' is assigned a value but never used.","'Switch' is defined but never used.","'joinTripApi' is assigned a value but never used.","'tripIdApi' is assigned a value but never used.","'Activity' is defined but never used.","'CreateTrip' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'loginApi' is defined but never used.","'onClickButton' is defined but never used.","'activity' is assigned a value but never used.","'useRef' is defined but never used.","'user' is assigned a value but never used.","'numberOfUser' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]