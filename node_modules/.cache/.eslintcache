[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/App.js":"2","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"3","/home/ec2-user/environment/Project3/src/Login.js":"4","/home/ec2-user/environment/Project3/src/Logout.js":"5","/home/ec2-user/environment/Project3/src/Dashboard.js":"6","/home/ec2-user/environment/Project3/src/refreshToken.js":"7","/home/ec2-user/environment/Project3/src/api/api.js":"8","/home/ec2-user/environment/Project3/src/Nav.js":"9","/home/ec2-user/environment/Project3/src/components/HomePage.js":"10","/home/ec2-user/environment/Project3/src/Activity.js":"11","/home/ec2-user/environment/Project3/src/JoinTrip.js":"12","/home/ec2-user/environment/Project3/src/CreateTrip.js":"13","/home/ec2-user/environment/Project3/src/TripHome.js":"14"},{"size":500,"mtime":1617893326172,"results":"15","hashOfConfig":"16"},{"size":2940,"mtime":1618775315704,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1617893326172,"results":"18","hashOfConfig":"16"},{"size":1588,"mtime":1618546187221,"results":"19","hashOfConfig":"16"},{"size":736,"mtime":1618546125987,"results":"20","hashOfConfig":"16"},{"size":676,"mtime":1618546266998,"results":"21","hashOfConfig":"16"},{"size":720,"mtime":1617991110130,"results":"22","hashOfConfig":"16"},{"size":1557,"mtime":1618530577455,"results":"23","hashOfConfig":"16"},{"size":1976,"mtime":1618546082413,"results":"24","hashOfConfig":"16"},{"size":904,"mtime":1618530659116,"results":"25","hashOfConfig":"16"},{"size":707,"mtime":1618546369779,"results":"26","hashOfConfig":"16"},{"size":586,"mtime":1618594605792,"results":"27","hashOfConfig":"16"},{"size":5107,"mtime":1618775315708,"results":"28","hashOfConfig":"16"},{"size":502,"mtime":1618775315708,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"168wlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/ec2-user/environment/Project3/src/index.js",[],["64","65"],"/home/ec2-user/environment/Project3/src/App.js",[],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/Login.js",[],"/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/Dashboard.js",["66","67","68","69","70"],"import logo from './logo.svg';\nimport React, { useState } from 'react';\nimport './App.css';\nimport Login from'./Login.js';\nimport Logout from'./Logout.js';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction Dashboard(props){\n    return(\n        <div>\n            <ul>GIVEN NAME: {(props.givenName).charAt(0).toUpperCase() + (props.givenName).slice(1)}</ul>\n            <ul>FULLNAME: {props.name}</ul>\n            <ul>EMAIL: {props.email}</ul>\n            <Logout/>\n            <Router>\n                <div>\n                    <ul to='/logout'></ul>\n                    <Route path=\"/logout\" component={Logout} />\n                </div>\n            </Router>\n            \n        </div>\n        );\n}\n\nexport default Dashboard;\n",["71","72"],"/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",["73","74"],"const fetch = require(\"node-fetch\");\n\nconst loginApi = (tokenId) => {\n    //console.log('token id is', tokenId);\n    const data = {'token_id': tokenId};\n    //console.log('data is', data)\n    return fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst logoutApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/logout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst userApi = (tokenId) => {\n    return fetch('/api/user', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\n\nconst joinTripApi = (tokenId) => {\n    return fetch('/api/joinTrip', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\nconst tripIdApi = (tokenId) => {\n    return fetch('/api/trip/trip_id={id}', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\nexport {\n    loginApi,\n    logoutApi,\n    userApi\n}","/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["75","76","77","78","79"],"import React, { useState } from 'react';\nimport Login from '../Login.js';\nimport Logout from '../Logout.js';\nimport Activity from '../Activity.js';\nimport {loginApi, userApi} from '../api/api.js';\n\nfunction HomePage(props){\n    \n  function onClickButton() {\n    userApi(props.currentToken).then(data => console.log('Verified Status:', props));\n  }\n  //<button onClick={onClickButton} type=\"button\">Test API</button>\n  // { props.isAuth && 'Token ID: ' && props.currentToken }\n  return (\n            <div className=\"activity\">\n             {props.isAuth && <Login tokenHandler={props.token} \n             authHandler={props.auth}/>?(\n             <div>\n\n             <h3>Welcome to your Home Page</h3>\n              <p>{userApi}</p>\n             </div>\n             )\n             :null}\n\n\n\n        </div>\n  )\n}\n\nexport default HomePage;\n\n//<button onClick={onClickButton} type=\"button\">Test API</button> ","/home/ec2-user/environment/Project3/src/Activity.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/CreateTrip.js",["80"],"import Login from './Login.js';\nimport TripHome from './TripHome';\nimport React, { useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport './App.css';\nimport moment from 'moment';\n//import DatePicker from 'react-datetime';\nimport { BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n//import 'react-datetime/css/react-datetime.css';\n/* eslint-disable react/jsx-props-no-spreading */\nfunction CreateTrip(props){\n\n    //const user = useState('');\n    const [dataa,setDataa]=useState(false);\n    //const numberOfUser = useState(0);\n   // const [date,setDate] = useState([]);\n    //const [email,setEmail]=useState([]);\n    const { register, handleSubmit, formState: { errors } } = useForm();\n // const onSubmit = data => console.log(data);\n  function onSubmit(data){\n      console.log(data);\n      setDataa(true);\n      console.log(dataa)\n  }\n//     // disable past dates\n//   const yesterday = moment().subtract(1, 'day');\n//   const disablePastDt = current => {\n//     return current.isAfter(yesterday);\n//   };\n  console.log(errors);\n\n    return(\n        <div className=\"activity\">\n             {props.isAuth && <Login tokenHandler={props.token} authHandler={props.auth}/>?(\n             <div>\n                 <h3>Welcome to your Create Trip!</h3>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                      <div><label className=\"StartDate\">Enter the Trip Name: </label><input type=\"text\"  placeholder=\"Trip Name\" {...register(\"Trip Name\", {required: true, maxLength: 17})} /></div>\n                      <div><label className=\"StartDate\">Enter Email to Invite: </label><input type=\"text\"  placeholder=\"Email\" {...register(\"Email\", {required: true, pattern: /^\\S+@\\S+$/i})} /></div>\n                      <div><label className=\"StartDate\">Start Date: </label><input type=\"date\"  placeholder=\"Start Date\" {...register(\"Start Date\", {required: true})} /></div>\n                      <div><label className=\"StartDate\">End Date: </label>  \n                         <input type=\"date\" placeholder=\"End Date\" {...register(\"End Date\", {required: true})} /></div>\n                       {dataa?(<div><Link to=\"/TripHome\"><input type=\"submit\" /></Link></div>):<div><input type=\"submit\"/></div>}\n                </form>\n                   \n             </div>)\n             :null}\n            \n{dataa?(    <Router>\n                \n                <div>\n                    <Route path=\"/TripHome\" component={TripHome} />\n                </div>\n            </Router>):null}\n             \n        </div>\n        );\n}\n\nexport default CreateTrip;","/home/ec2-user/environment/Project3/src/TripHome.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":1,"column":8,"nodeType":"87","messageId":"88","endLine":1,"endColumn":12},{"ruleId":"85","severity":1,"message":"89","line":2,"column":17,"nodeType":"87","messageId":"88","endLine":2,"endColumn":25},{"ruleId":"85","severity":1,"message":"90","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":13},{"ruleId":"85","severity":1,"message":"91","line":8,"column":3,"nodeType":"87","messageId":"88","endLine":8,"endColumn":9},{"ruleId":"85","severity":1,"message":"92","line":10,"column":3,"nodeType":"87","messageId":"88","endLine":10,"endColumn":7},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","replacedBy":"94"},{"ruleId":"85","severity":1,"message":"95","line":38,"column":7,"nodeType":"87","messageId":"88","endLine":38,"endColumn":18},{"ruleId":"85","severity":1,"message":"96","line":48,"column":7,"nodeType":"87","messageId":"88","endLine":48,"endColumn":16},{"ruleId":"85","severity":1,"message":"89","line":1,"column":17,"nodeType":"87","messageId":"88","endLine":1,"endColumn":25},{"ruleId":"85","severity":1,"message":"97","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"98","line":4,"column":8,"nodeType":"87","messageId":"88","endLine":4,"endColumn":16},{"ruleId":"85","severity":1,"message":"99","line":5,"column":9,"nodeType":"87","messageId":"88","endLine":5,"endColumn":17},{"ruleId":"85","severity":1,"message":"100","line":9,"column":12,"nodeType":"87","messageId":"88","endLine":9,"endColumn":25},{"ruleId":"85","severity":1,"message":"101","line":6,"column":8,"nodeType":"87","messageId":"88","endLine":6,"endColumn":14},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Login' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.",["102"],["103"],"'joinTripApi' is assigned a value but never used.","'tripIdApi' is assigned a value but never used.","'Logout' is defined but never used.","'Activity' is defined but never used.","'loginApi' is defined but never used.","'onClickButton' is defined but never used.","'moment' is defined but never used.","no-global-assign","no-unsafe-negation"]