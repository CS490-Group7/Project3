[{"/home/ec2-user/environment/Project3/src/index.js":"1","/home/ec2-user/environment/Project3/src/reportWebVitals.js":"2","/home/ec2-user/environment/Project3/src/App.js":"3","/home/ec2-user/environment/Project3/src/Activity.js":"4","/home/ec2-user/environment/Project3/src/JoinTrip.js":"5","/home/ec2-user/environment/Project3/src/Nav.js":"6","/home/ec2-user/environment/Project3/src/components/HomePage.js":"7","/home/ec2-user/environment/Project3/src/CreateTrip.js":"8","/home/ec2-user/environment/Project3/src/TripHome.js":"9","/home/ec2-user/environment/Project3/src/Login.js":"10","/home/ec2-user/environment/Project3/src/Logout.js":"11","/home/ec2-user/environment/Project3/src/api/api.js":"12","/home/ec2-user/environment/Project3/src/refreshToken.js":"13","/home/ec2-user/environment/Project3/src/InputEmails.js":"14"},{"size":500,"mtime":1617932993876,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1617824026869,"results":"17","hashOfConfig":"16"},{"size":2520,"mtime":1618857005755,"results":"18","hashOfConfig":"16"},{"size":707,"mtime":1618602875349,"results":"19","hashOfConfig":"16"},{"size":586,"mtime":1618602875353,"results":"20","hashOfConfig":"16"},{"size":1643,"mtime":1618857005759,"results":"21","hashOfConfig":"16"},{"size":1856,"mtime":1618867611432,"results":"22","hashOfConfig":"16"},{"size":3932,"mtime":1618873784385,"results":"23","hashOfConfig":"16"},{"size":438,"mtime":1618857005759,"results":"24","hashOfConfig":"16"},{"size":1493,"mtime":1618857015087,"results":"25","hashOfConfig":"16"},{"size":694,"mtime":1618857005755,"results":"26","hashOfConfig":"16"},{"size":1479,"mtime":1618857005759,"results":"27","hashOfConfig":"16"},{"size":720,"mtime":1617847354012,"results":"28","hashOfConfig":"16"},{"size":3142,"mtime":1618873166130,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"168wlww",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ec2-user/environment/Project3/src/index.js",[],["63","64"],"/home/ec2-user/environment/Project3/src/reportWebVitals.js",[],"/home/ec2-user/environment/Project3/src/App.js",["65","66","67"],"import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n//import Login from'./Login';\n//import Logout from'./Logout';\nimport HomePage from './components/HomePage';\nimport Nav from './Nav';\nimport Activity from './Activity';\nimport JoinTrip from './JoinTrip';\nimport CreateTrip from './CreateTrip';\nimport TripHome from './TripHome';\n\n\nimport {BrowserRouter as Router, Switch,Route} from \"react-router-dom\";\n\nfunction App(props) {\n    const [isAuthenticated, setAuth] = useState(false);\n    const [tokenId, setTokenId] = useState('');\n    \n    // When components gets added to the DOM tree, state is loaded from localStorage (if available)\n    useEffect(() => {\n      let storedAuth = localStorage.getItem('isAuth') === 'true';\n      let storedTokenId = localStorage.getItem('tokenId');\n      let newAuth = isAuthenticated;\n      let newToken = tokenId;\n      if(storedAuth != undefined)\n        newAuth = storedAuth;\n      if(storedTokenId !== undefined)\n        newToken = storedTokenId;\n      setAuth(newAuth);\n      setTokenId(newToken);\n    }, []);\n  \n    // Update the authenticated state and token ID\n    function loginHandler(tokenId){\n      setAuth(true);\n      setTokenId(tokenId);\n      localStorage.setItem(\"isAuth\", true);\n      localStorage.setItem('tokenId', tokenId );\n    }\n    \n    // Clear the authenticated state and token ID\n    function logoutHandler(){\n      setAuth(false);\n      setTokenId(\"\");\n      localStorage.setItem(\"isAuth\", false);\n      localStorage.setItem('tokenId', \"\" );\n    }\n    \n    return (\n    <Router>\n    <div className=\"App\">\n        <Nav login={loginHandler} logout={logoutHandler} isAuth={isAuthenticated} token={tokenId}/>\n        <Switch>\n          <Route exact path=\"/Home\" render={(props) => ( <HomePage logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/Activity\" render={(props) => ( <Activity logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/JoinTrip\" render={(props) => ( <JoinTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/CreateTrip\" render={(props) => ( <CreateTrip logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n          <Route exact path=\"/TripHome\" render={(props) => ( <TripHome logout={logoutHandler} isAuth={isAuthenticated} token={tokenId} /> )}/>\n        </Switch>\n      </div>\n    </Router>);\n};\n\nexport default App;","/home/ec2-user/environment/Project3/src/Activity.js",[],"/home/ec2-user/environment/Project3/src/JoinTrip.js",[],"/home/ec2-user/environment/Project3/src/Nav.js",[],"/home/ec2-user/environment/Project3/src/components/HomePage.js",["68","69","70","71","72","73"],"/home/ec2-user/environment/Project3/src/CreateTrip.js",["74","75","76","77"],"/home/ec2-user/environment/Project3/src/TripHome.js",["78"],"import React from 'react';\nimport Login from './Login.js';\nfunction TripHome(props)\n{console.log(props.name)\n    return (\n        <div className=\"activity\">\n             {props.isAuth?\n             (\n             <div>\n             <div><h3>Welcome to your TripHome!</h3></div>\n             <div><button>Click</button></div>\n             </div>\n             ):<h3>Please Login!!!</h3>}\n        </div>\n        );\n}\nexport default TripHome;","/home/ec2-user/environment/Project3/src/Login.js",["79","80","81"],"import React from 'react';\n\nimport {GoogleLogin} from 'react-google-login';\n\nimport {refreshTokenSetup} from './refreshToken.js';\nimport {loginApi} from './api/api.js';\nimport { useHistory, BrowserRouter as Router,Route, Link} from \"react-router-dom\";\n\n\nconst clientId = process.env.REACT_APP_CLIENT_ID;\n\nfunction Login(props)\n{\n    //const [email,setEmail] = useState('');\n    //const [name,setName] = useState('');\n    //const [tokenId, setTokenId] = useState('');\n    //const [givenName,setGivenName] = useState('');\n   // const [logStatus,setLogStatus] = useState(false);\n    const history = useHistory();\n\n    const onSuccess= (res)=>\n    {\n        console.log('[Login Success] currentUser:',res.tokenId);\n        loginApi(res.tokenId).then(data => console.log('Verified API login:', data)).then(result => props.login(res.tokenId));\n        refreshTokenSetup(res);\n        history.push('/Home');\n    };\n    const onFailure = (res)=> \n    {\n        console.log('[Login failed] res: ',res);\n    }\n\n    return (\n            <div>\n                <div>\n                <GoogleLogin\n                    clientId={clientId}\n                    buttonText=\"Login\"\n                    onSuccess={onSuccess}\n                    onFailure={onFailure}\n                    cookiePolicy ={'single_host_origin'}\n                    style ={{marginTop: '100px'}}\n                    isSignedIn={false}\n                />\n                </div>\n            </div>\n            );\n}\n\nexport default Login;\n","/home/ec2-user/environment/Project3/src/Logout.js",[],"/home/ec2-user/environment/Project3/src/api/api.js",["82","83"],"const fetch = require(\"node-fetch\");\n\nconst loginApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst logoutApi = (tokenId) => {\n    const data = {'token_id': tokenId};\n    return fetch('/api/auth/logout', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n    }).then(response => response.json());\n};\n\nconst userApi = (tokenId) => {\n    return fetch('/api/user', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\n\nconst joinTripApi = (tokenId) => {\n    return fetch('/api/joinTrip', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\n\nconst tripIdApi = (tokenId) => {\n    return fetch('/api/trip/trip_id={id}', {\n        method: 'GET',\n        headers: {\n            'Authorization': 'Bearer ' + tokenId,\n            'Content-Type': 'application/json',\n        }\n    }).then(response => response.json());\n};\nexport {\n    loginApi,\n    logoutApi,\n    userApi\n}","/home/ec2-user/environment/Project3/src/refreshToken.js",[],"/home/ec2-user/environment/Project3/src/InputEmails.js",["84","85","86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":26,"column":21,"nodeType":"98","messageId":"99","endLine":26,"endColumn":23},{"ruleId":"100","severity":1,"message":"101","line":32,"column":8,"nodeType":"102","endLine":32,"endColumn":10,"suggestions":"103"},{"ruleId":"92","severity":1,"message":"104","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"105","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"92","severity":1,"message":"106","line":4,"column":9,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"96","severity":1,"message":"107","line":17,"column":25,"nodeType":"98","messageId":"99","endLine":17,"endColumn":27},{"ruleId":"96","severity":1,"message":"97","line":32,"column":22,"nodeType":"98","messageId":"99","endLine":32,"endColumn":24},{"ruleId":"100","severity":1,"message":"108","line":42,"column":8,"nodeType":"102","endLine":42,"endColumn":35,"suggestions":"109"},{"ruleId":"92","severity":1,"message":"104","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"110","line":3,"column":17,"nodeType":"94","messageId":"95","endLine":3,"endColumn":25},{"ruleId":"92","severity":1,"message":"111","line":7,"column":53,"nodeType":"94","messageId":"95","endLine":7,"endColumn":57},{"ruleId":"92","severity":1,"message":"112","line":13,"column":50,"nodeType":"94","messageId":"95","endLine":13,"endColumn":56},{"ruleId":"92","severity":1,"message":"104","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":13},{"ruleId":"92","severity":1,"message":"113","line":7,"column":39,"nodeType":"94","messageId":"95","endLine":7,"endColumn":45},{"ruleId":"92","severity":1,"message":"114","line":7,"column":46,"nodeType":"94","messageId":"95","endLine":7,"endColumn":51},{"ruleId":"92","severity":1,"message":"111","line":7,"column":53,"nodeType":"94","messageId":"95","endLine":7,"endColumn":57},{"ruleId":"92","severity":1,"message":"115","line":36,"column":7,"nodeType":"94","messageId":"95","endLine":36,"endColumn":18},{"ruleId":"92","severity":1,"message":"116","line":46,"column":7,"nodeType":"94","messageId":"95","endLine":46,"endColumn":16},{"ruleId":"92","severity":1,"message":"104","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":13},{"ruleId":"92","severity":1,"message":"117","line":2,"column":8,"nodeType":"94","messageId":"95","endLine":2,"endColumn":16},{"ruleId":"92","severity":1,"message":"118","line":4,"column":10,"nodeType":"94","messageId":"95","endLine":4,"endColumn":17},{"ruleId":"92","severity":1,"message":"119","line":6,"column":8,"nodeType":"94","messageId":"95","endLine":6,"endColumn":18},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'isAuthenticated' and 'tokenId'. Either include them or remove the dependency array.","ArrayExpression",["122"],"'Login' is defined but never used.","'Logout' is defined but never used.","'loginApi' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'updateData'. Either include it or remove the dependency array.",["123"],"'useState' is defined but never used.","'Link' is defined but never used.","'errors' is assigned a value but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'joinTripApi' is assigned a value but never used.","'tripIdApi' is assigned a value but never used.","'TripHome' is defined but never used.","'useForm' is defined but never used.","'CreateTrip' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [isAuthenticated, tokenId]",{"range":"128","text":"129"},"Update the dependencies array to be: [props.token, props.isAuth, updateData]",{"range":"130","text":"131"},[1095,1097],"[isAuthenticated, tokenId]",[1319,1346],"[props.token, props.isAuth, updateData]"]